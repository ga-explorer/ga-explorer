<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Computer Science &#8211; Geometric Algebra Explorer</title>
	<atom:link href="/index.php/tag/computer-science/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Voyaging the Computational Universe with Geometric Algebra</description>
	<lastBuildDate>Thu, 09 Aug 2018 21:09:47 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.9.8</generator>

<image>
	<url>/wp-content/uploads/2016/12/cropped-GAExplorer-Icon-150x150.jpg</url>
	<title>Computer Science &#8211; Geometric Algebra Explorer</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Geometric Algebra in Computer Science</title>
		<link>/index.php/2017/01/17/ga-computer-science/</link>
		<comments>/index.php/2017/01/17/ga-computer-science/#respond</comments>
		<pubDate>Tue, 17 Jan 2017 20:15:10 +0000</pubDate>
		<dc:creator><![CDATA[GA Explorer]]></dc:creator>
				<category><![CDATA[GA Applications]]></category>
		<category><![CDATA[GA Computing]]></category>
		<category><![CDATA[GA Software]]></category>
		<category><![CDATA[Interview]]></category>
		<category><![CDATA[Computer Graphics]]></category>
		<category><![CDATA[Computer Science]]></category>
		<category><![CDATA[Computer Vision]]></category>
		<category><![CDATA[Computing]]></category>
		<category><![CDATA[Geometric Algebra]]></category>
		<category><![CDATA[Neural Computing]]></category>
		<category><![CDATA[Robotics]]></category>
		<category><![CDATA[School]]></category>
		<category><![CDATA[Teaching]]></category>

		<guid isPermaLink="false">http://gacomputing.info/?p=2137</guid>
		<description><![CDATA[<p>One of the most important fields of application for Geometric algebra can be found in Computer Science. In this post, I interview 3 key researchers who apply Geometric Algebra in their work to share their valuable experience and insights. Their applied research spans many applications in computer science including Computer Graphics, Robotics, Computer Vision, Image Processing, Neural Computing, and more.</p>
<p>The post <a rel="nofollow" href="/index.php/2017/01/17/ga-computer-science/">Geometric Algebra in Computer Science</a> appeared first on <a rel="nofollow" href="/">Geometric Algebra Explorer</a>.</p>
]]></description>
				<content:encoded><![CDATA[<div class='dropshadowboxes-container ' style='width:auto;'>
                            <div class='dropshadowboxes-drop-shadow dropshadowboxes-rounded-corners dropshadowboxes-inside-and-outside-shadow dropshadowboxes-curved dropshadowboxes-curved dropshadowboxes-curved-horizontal-2 dropshadowboxes-effect-default' style=' border: 1px solid #dddddd; height:; background-color:#ffffff;    '>
                            
<p><a href="/wp-content/uploads/2017/01/Computer-Science.jpg"><img class="aligncenter size-large wp-image-2354" src="/wp-content/uploads/2017/01/Computer-Science-1024x724.jpg" alt="Computer Science" width="1024" height="724" srcset="/wp-content/uploads/2017/01/Computer-Science-1024x724.jpg 1024w, /wp-content/uploads/2017/01/Computer-Science-300x212.jpg 300w, /wp-content/uploads/2017/01/Computer-Science-768x543.jpg 768w, /wp-content/uploads/2017/01/Computer-Science.jpg 1280w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></p>
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<div class="su-quote su-quote-style-default su-quote-has-cite"><div class="su-quote-inner su-clearfix">
[Computer science] is not really about computers and it&#8217;s not about computers in the same sense that physics is not really about particle accelerators, and biology is not about microscopes and Petri dishes&#8230; and geometry isn&#8217;t really about using surveying instruments.</p>
<span class="su-quote-cite">Hal Abelson</span></div></div>
</div>

                            </div>
                        </div>
<hr />
<span class="dropcap">O</span>ne of the most important fields of application for Geometric algebra can be found in Computer Science. In this post, I interview 3 leading researchers who apply Geometric Algebra in their work to share their valuable experience and insights. Their applied research spans many applications in computer science including Computer Graphics, Robotics, Computer Vision, Image Processing, Neural Computing, and more.</p>
<hr />
<div class="su-note" style="border-color:#a9c0e3;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;"><div class="su-note-inner su-clearfix" style="background-color:#BCD5FC;border-color:#f2f7fe;color:#464646;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;">
<h3><strong>Dr. Leo Dorst</strong></h3>
<div class='dropshadowboxes-container dropshadowboxes-right ' style='width:auto;'>
                            <div class='dropshadowboxes-drop-shadow dropshadowboxes-rounded-corners dropshadowboxes-outside-shadow dropshadowboxes-curved dropshadowboxes-curved dropshadowboxes-curved-horizontal-2 dropshadowboxes-effect-default' style=' border: 1px solid #dddddd; height:; background-color:#ffffff;    '>
                            
<p><span style="color: #003366;"><strong><a href="/wp-content/uploads/2017/01/Dr.-Leo-Dorst.jpg"><img class="size-full wp-image-2355 aligncenter" src="/wp-content/uploads/2017/01/Dr.-Leo-Dorst.jpg" alt="Dr. Leo Dorst" width="200" height="200" srcset="/wp-content/uploads/2017/01/Dr.-Leo-Dorst.jpg 200w, /wp-content/uploads/2017/01/Dr.-Leo-Dorst-150x150.jpg 150w, /wp-content/uploads/2017/01/Dr.-Leo-Dorst-160x160.jpg 160w, /wp-content/uploads/2017/01/Dr.-Leo-Dorst-320x320.jpg 320w" sizes="(max-width: 200px) 100vw, 200px" /></a></strong></span></p>

                            </div>
                        </div>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> Tell us about your primary research and teaching interests. What sort of satisfaction do you get when working on your primary interests?</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>My primary interest is the interplay between geometry and its algebraic representation. It is great fun to derive some equation solving a problem, and then hearing it begin to talk to you about aspects you had never considered in the original formulation. This works most strongly in GA, which is why I love that framework. However, it is hard to find funding for this in abstracto. I am currently tying it into a project on restoring broken archaeological artifacts based on 3D scans (project-gravitate.eu); in a theoretical work package, this pulls in my earlier work on geometric path planning and mathematical morphology and offers an opportunity to study finite elements methods from a GA point of view.</p>
</div></div>
<p>&nbsp;</p>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> What do you think are the main characteristics of GA as a mathematical modeling language?</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>GA clears your mind and your software, even when you decide to stick to LA in practice (at least, in the beginning). The disgusting number of different terms and techniques in LA which are all, in hindsight, ways to avoid using the outer product are a good example. Once you realize that outer product exists, much of the operations described in natural language (like &#8216;span&#8217;) coherently collapse to elementary and compact algebraic operations under your own control. Certainly, in computer science where 3D is just not enough (the spaces involved in machine learning are very high-dimensional), the outer product MUST be taught. And once you have the outer product, you might as well absorb the geometric product for generalized projections and rejections. As for operators, use rotors instead of quaternions, so you have something that is real and that generalizes to n-D.</p>
</div></div>
<p>&nbsp;</p>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> Tell us about your important book, coauthored with S. Mann and D. Fontijne, 'Geometric Algebra for Computer Science' (GA4CS). How can the GA community make more books like it to help attract more people to learn and apply GA in their research and teaching?</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>After I just learned GA, I was amazed by the clarity it provides at the computational basis for geometry, and its new elements and operators at an intermediate level of abstraction: it is great to have the very interesting new primitives, especially in CGA (conformal geometric algebra). What can we do more or better once we learn to think in terms of those primitives? I knew I could not develop the consequences for intermediate and high-level algorithms myself &#8212; there is just too much reform to do, in too many fields. So we wrote a book to convey the basic tools and the algebraically supported intuition of their interplay, for others to do that work, each in their own subfield. It has not quite taken off yet in the way I hoped, though there are some examples (such as <a href="https://ipsj.ixsq.nii.ac.jp/ej/?action=repository_action_common_download&amp;item_id=95768&amp;item_no=1&amp;attribute_id=1&amp;file_no=1" target="_blank" rel="noopener">work by Ishida at Toyota</a> on genetic algorithms for road-following using GA primitives and their interactions as the chromosomes and cross-over operations). We need more work at that intermediate level, showing how or when the possibility not to go down to the vector level pays off.</p>
</div></div>
<p>&nbsp;</p>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> If you were to write a second book on GA mathematics and applications after 10 years of GA4CS, what new GA topics would you include? What new applications?</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>At some point it would be good to collate some convincing applications of the new thinking, directly employing the intermediate primitives (like the Toyota example above, or the application to GIS). Our 2011 &#8216;Guide to GA in Practice&#8217; contains some good chapters in those directions, but a proper book would need more tight editorial coherence. I would like to see parts on projective geometric algebra since that is so important to graphics (I believe R(3,3) is the right model, but we still need to learn to encode the world in its primitives, the line complexes), and on finite element methods done in GA (with special emphasis on 3D meshes).</p>
</div></div>
</div></div>
<p>&nbsp;</p>
<div class="su-note" style="border-color:#a9c0e3;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;"><div class="su-note-inner su-clearfix" style="background-color:#BCD5FC;border-color:#f2f7fe;color:#464646;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;">
<h3>Dr. Dietmar Hildenbrand</h3>
<div class='dropshadowboxes-container dropshadowboxes-right ' style='width:auto;'>
                            <div class='dropshadowboxes-drop-shadow dropshadowboxes-rounded-corners dropshadowboxes-outside-shadow dropshadowboxes-curved dropshadowboxes-curved dropshadowboxes-curved-horizontal-2 dropshadowboxes-effect-default' style=' border: 1px solid #dddddd; height:; background-color:#ffffff;    '>
                            
<p><span style="color: #003366;"><strong><a href="/wp-content/uploads/2017/01/Dr.-Dietmar-Hildenbrand.jpg"><img class="size-medium wp-image-2356 aligncenter" src="/wp-content/uploads/2017/01/Dr.-Dietmar-Hildenbrand-297x300.jpg" alt="Dr. Dietmar Hildenbrand" width="297" height="300" srcset="/wp-content/uploads/2017/01/Dr.-Dietmar-Hildenbrand-297x300.jpg 297w, /wp-content/uploads/2017/01/Dr.-Dietmar-Hildenbrand.jpg 564w" sizes="(max-width: 297px) 100vw, 297px" /></a></strong></span></p>

                            </div>
                        </div>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> What reasons made you want to do research related to Geometric Algebra? Tell us about the difficulties you faced and the satisfaction you felt during your journey with GA until now.</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>When I started to work with GA in 2003, I was immediately very impressed how easy it is to develop 3D algorithms dealing with geometric objects and operations based on GA. I was very happy to use a tool providing me an immediate visual result for mathematical expressions: CLUCalc from Christian Perwass. I am still developing most of my GA algorithms with CLUCalc and, in my opinion, CLUCalc is still today the best tool in order to learn how to use Geometric Algebra for 3D applications.</p>
<p>In 2004, when I organized and presented a GA tutorial at the Eurographics conference in Grenoble together with Christian Perwass, Daniel Fontijne, and Leo Dorst, the feedback was positive and negative at the same time.<br />
On one hand, many people were happy about the expressiveness of GA, but on the other hand, it was clear for everybody that implementations of computer graphics applications were not competitive in terms of runtime performance.</p>
<p>I realized that improving the runtime performance of GA will be the key to convincing engineers to use GA in their applications. At that time, nobody really expected that it could be possible for implementations of GA algorithms to be faster than the conventional implementation. But, in 2006, we were happy to present even two different implementations proving exactly that for a computer animation application (the movement of the arm of a virtual character).</p>
</div></div>
<p>&nbsp;</p>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> Tell us about Geometric Algebra Computing (GAC). What were your initial expectations when you started working on that topic? What is its current state? How do you see the future of GAC and its applications in computer science and engineering?</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>Our approach for the just mentioned proof-of-concept application was very specific. This is why our next goal was a general system making it possible for almost every engineer to include GA in his/her application. And, the description of GA algorithms should be as much as possible similar to how CLUCalc ist doing that.</p>
<p>Now, we are happy to provide the Gaalop (Geometric Algebra Algorithms Optimizer) precompiler for the integration of GA into standard programming languages such as C++, OpenCL, CUDA and C++ AMP.</p>
<p>The integration is done based on GaalopScript, which is very much inspired by the CLUCalc scripting language. This technology is described in my book &#8220;Foundations of Geometric Algebra Computing&#8221; from 2013. Since 2015 this technology is part of the ecosystem of the HSA Foundation of more than 40 companies dealing with new heterogeneous computing architectures. Now, we have this technology available, as well as some other GA tools such as GMac, Gaigen, Gaalet and Versor, but the community working with it is still very small. The future of GAC and its applications in computer science and engineering relies heavily on whether we will succeed in closing this gap.</p>
</div></div>
<p>&nbsp;</p>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> What steps do you think should the GA community take to gain wider spread of GA among the larger community of engineers and computer scientists?</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>Today, we indeed have this GAC technology available for easy to develop, geometrically intuitive, robust and fast engineering applications, but there is still only a small number of people knowing it. Exactly at this point, the book &#8220;Introduction to Geometric Algebra Computing&#8221;, that I am just writing, comes into place. The main goal of this book is to close the gap with an introduction of GA from an engineering/computing perspective. The intended audiences are students, engineers, and researchers interested in learning GAC. This book is intended to give a rapid introduction to the computing with Geometric Algebra and its power for geometric modeling. From the geometric objects point of view, it focuses on the most basic ones, namely points, lines, and circles. We call this algebra Compass Ruler Algebra since you are able to handle it comparable to working with compass and ruler. It offers the possibility to compute with these geometric objects and their geometric operations and transformations in a very intuitive way. While focusing on 2D it is easily expandable to 3D computations as used in many books dealing with the very popular Conformal Geometric Algebra in engineering applications such as computer graphics, computer vision, and robotics. This book follows a top-down approach. Focusing first on how to use GA, it is up to the reader how much he/she would like to go into the details.</p>
<p>Another attempt to gain wider spread is the ENGAGE (Empowering Novel Geometric Algebra for Graphics &amp; Engineering) workshop as part of the CGI (Computer Graphics International) conference. This year, this will be in Japan (<a href="http://fj.ics.keio.ac.jp/cgi17/" target="_blank" rel="noopener">http://fj.ics.keio.ac.jp/cgi17/</a>). But, sure, there is still the need of many good ideas in order to attract more and more engineers.</p>
</div></div>
<p>&nbsp;</p>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> I know you are interested in teaching GA in schools. From your point of view, what steps are required in the near future to reach a wide acceptance of this idea? What are the difficulties you see facing its achievement?</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>Yes, you are right, I already have some experience with GA at schools. Because of its geometric intuitiveness, it is very easy for children to develop algorithms in GA. In some workshops, I could see that children are happy to solve simple robotics problems which they normally are not able to before university. A colleague of mine already taught special relativity based on GA at school. But the main problem is to make GA really part of the curriculum. Maybe some teachers/responsibles for curricula will use my above mentioned new book for teaching themselves and for introducing it already in school.</p>
</div></div>
</div></div>
<p>&nbsp;</p>
<div class="su-note" style="border-color:#a9c0e3;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;"><div class="su-note-inner su-clearfix" style="background-color:#BCD5FC;border-color:#f2f7fe;color:#464646;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;">
<h3><strong>Dr. Eckhard Hitzer</strong></h3>
<div class='dropshadowboxes-container dropshadowboxes-right ' style='width:auto;'>
                            <div class='dropshadowboxes-drop-shadow dropshadowboxes-rounded-corners dropshadowboxes-outside-shadow dropshadowboxes-curved dropshadowboxes-curved dropshadowboxes-curved-horizontal-2 dropshadowboxes-effect-default' style=' border: 1px solid #dddddd; height:; background-color:#ffffff;    '>
                            
<p><span style="color: #003366;"><strong><a href="/wp-content/uploads/2017/01/Dr.-Eckhard-Hitzer.jpg"><img class="size-full wp-image-2357 aligncenter" src="/wp-content/uploads/2017/01/Dr.-Eckhard-Hitzer.jpg" alt="Dr. Eckhard Hitzer" width="200" height="160" /></a></strong></span></p>

                            </div>
                        </div>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> During the previous years, you've been following the developments in applied GA through your GA Updates blog. How do you see the current state of GA research? In what application areas do you expect the next developments will probably be?</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>Geometric Algebra research is not only revolutionizing algorithm development in many fields (robotics, visualization, mapping, virtual reality, GIS, molecular dynamics, telecommunication, offshore mechatronics, 3D cadastres, navigation, &#8230;), it also begins to exhibit superior accuracy, stability, and speed, and is increasingly introduced in mainstream computing ecosystems.</p>
</div></div>
<p>&nbsp;</p>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> What types of problems, from your experience, can be handled with GA more effectively relative to classical techniques in neural computing and signal processing? What kinds of ideas can be investigated in these two areas using GA's powerful mathematics?</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>In neural computing and signal processing, Geometric Algebra allows to generalize 1D and 2D algorithms seamlessly to higher dimensions with great advantages for electromagnetic signals, including light and color, and it fully captures, analyzes and reproduces complex high dimensional geometric relationships and topology. It begins to be used for technologies needed for autonomous driving, color face recognition, landmine detection, speech recognition, new forms of tomography, &#8230;</p>
</div></div>
<p>&nbsp;</p>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> If you are talking to a new post-graduate student and trying to explain the benefits of using GA in his future research activities, what would you tell him about GA? What pitfalls would you warn him not to get into? What expectations should he have related to the future of GA research?</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>Be ready to unlearn often inefficient, inaccurate, unintuitive matrix methods and systems of linear equations. Instead learn to think and work directly in terms of geometric entities, their relations, transformations, and interactions, all efficiently and invariantly expressed directly by geometric algebra entities and their products. Resist the initial temptation to fall back into coordinate system component techniques, which hide geometric realities behind veils of stupendous numerical arrays. Expect to liberate your geometric intuition, and be able to work with an advanced single universal integrative mathematical system for whatever problem or task you may face in the future.</p>
</div></div>
<p>&nbsp;</p>
<div class="su-service"><div class="su-service-title" style="padding-left:46px;min-height:32px;line-height:32px"><i class="fa fa-comments-o" style="font-size:32px;color:#333"></i> How can the GA community gain more supporters and members in the near future? What kinds of events, funding proposals, online activities, etc. should the GA community focus on to attain this goal?</div><div class="su-service-content su-clearfix" style="padding-left:46px">
<p>Organizing sessions and workshops at major science and engineering conferences is a good way. International collaborative projects might be another. Submitting research papers to all types of science and engineering journals, when the applications topic permits that, rather than highly specialized journals. Preprints published ASAP on servers like vixra.org, preprint.org, etc. and open access, will also help. In addition, sharing lectures and software demos on YouTube will help interested students, professionals, and engineers to know about geometric algebra even outside formal educational and academic workshop settings.</p>
</div></div>
</div></div>
<p>The post <a rel="nofollow" href="/index.php/2017/01/17/ga-computer-science/">Geometric Algebra in Computer Science</a> appeared first on <a rel="nofollow" href="/">Geometric Algebra Explorer</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/2017/01/17/ga-computer-science/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Geometric Algebra: Ascension of the Mind</title>
		<link>/index.php/2017/01/13/ga-computing3/</link>
		<comments>/index.php/2017/01/13/ga-computing3/#respond</comments>
		<pubDate>Fri, 13 Jan 2017 14:00:42 +0000</pubDate>
		<dc:creator><![CDATA[GA Explorer]]></dc:creator>
				<category><![CDATA[Geometric Algebra]]></category>
		<category><![CDATA[Algebra]]></category>
		<category><![CDATA[Blade]]></category>
		<category><![CDATA[Clifford Algebra]]></category>
		<category><![CDATA[Computer Science]]></category>
		<category><![CDATA[Distance]]></category>
		<category><![CDATA[Engineering]]></category>
		<category><![CDATA[Generative Modeling]]></category>
		<category><![CDATA[Geometry]]></category>
		<category><![CDATA[Hyper-complex Number]]></category>
		<category><![CDATA[Linear Algebra]]></category>
		<category><![CDATA[Matrix]]></category>
		<category><![CDATA[Multivector]]></category>
		<category><![CDATA[Optimizing Compiler]]></category>
		<category><![CDATA[Versor]]></category>

		<guid isPermaLink="false">http://gacomputing.info/?p=636</guid>
		<description><![CDATA[<p>I discovered Geometric Algebra (GA) back in 2003 and it caught my attention immediately. In my whole life as a student, engineer, researcher, and teacher I've never met a symbolic mathematical system so beautifully close to geometric abstractions. In this post, I try to explain how Geometric Algebra can express, unify, and generalize many geometric abstractions we use as engineers and computer scientists.</p>
<p>The post <a rel="nofollow" href="/index.php/2017/01/13/ga-computing3/">Geometric Algebra: Ascension of the Mind</a> appeared first on <a rel="nofollow" href="/">Geometric Algebra Explorer</a>.</p>
]]></description>
				<content:encoded><![CDATA[<div class='dropshadowboxes-container ' style='width:auto;'>
                            <div class='dropshadowboxes-drop-shadow dropshadowboxes-rounded-corners dropshadowboxes-inside-and-outside-shadow dropshadowboxes-curled dropshadowboxes-effect-default' style=' border: 1px solid #dddddd; height:; background-color:#f2ede3;    '>
                            
<div class="su-note" style="border-color:#e5e5e5;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;"><div class="su-note-inner su-clearfix" style="background-color:#ffffff;border-color:#ffffff;color:#464646;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;">
<p><img class="aligncenter wp-image-2197 size-large" src="/wp-content/uploads/2017/01/flow-1086468_1280-1024x768.jpg" alt="Abstract Flow" width="1024" height="768" srcset="/wp-content/uploads/2017/01/flow-1086468_1280-1024x768.jpg 1024w, /wp-content/uploads/2017/01/flow-1086468_1280-300x225.jpg 300w, /wp-content/uploads/2017/01/flow-1086468_1280-768x576.jpg 768w, /wp-content/uploads/2017/01/flow-1086468_1280.jpg 1280w" sizes="(max-width: 1024px) 100vw, 1024px" /></p>
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<blockquote><p>If you understand something in only one way, then you don&#8217;t really understand it at all. The secret of what anything means to us depends on how we&#8217;ve connected it to all other things we know. Well-connected representations let you turn ideas around in your mind, to envision things from many perspectives until you find one that works for you. And that&#8217;s what we mean by thinking!</p>
<p style="text-align: right;"><em><strong>&#8212; Marvin Minsky</strong></em></p>
</blockquote>
</div>
</div></div>

                            </div>
                        </div>
<hr />
<span class="dropcap">I</span> discovered <a href="https://en.wikipedia.org/wiki/Geometric_algebra">Geometric Algebra</a> (GA) back in 2003 and it caught my attention immediately. In my whole life as a student, engineer, researcher, and teacher I&#8217;ve never met a symbolic mathematical system so beautifully close to geometric abstractions. In this post, I try to explain how Geometric Algebra can express, unify, and generalize many geometric abstractions we use as engineers and computer scientists.</p>
<hr />
<h3>The Generative Pattern</h3>
<div class="su-note" style="border-color:#dad5cc;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;"><div class="su-note-inner su-clearfix" style="background-color:#f2ede3;border-color:#fcfbf9;color:#464646;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;">
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<blockquote><p>What I cannot create, I do not understand.</p>
<p style="text-align: right;"><em><strong>&#8212; Richard Feynman</strong></em></p>
</blockquote>
</div>
</div></div>
<p>There are many ways we can understand Geometric Computing depending on our background and intended applications. One of the ways I find most attractive is the pattern of <strong>Geometric Generators</strong>. To explain geometric generators, I will give some simple examples in 3D Euclidean geometry.</p>
<p>If we have 3 real numbers a, b, and c, what geometric concepts can we represent using these 3 numbers? The following are two possible answers that we can get from most engineers and computer scientists:</p>
<ol>
<li><strong>A location in space:</strong> We are familiar with any <strong>point</strong> in our 3D Euclidean space being written as the 3-tuple (a, b, c).</li>
<li><strong>A direction in space:</strong> The same form of 3-tuple (a, b, c) can be also interpreted as a <strong>free vector </strong>in our geometric space.</li>
</ol>
<div class='dropshadowboxes-container dropshadowboxes-right ' style='width:auto;'>
                            <div class='dropshadowboxes-drop-shadow dropshadowboxes-rounded-corners dropshadowboxes-inside-and-outside-shadow dropshadowboxes-curled dropshadowboxes-effect-default' style=' border: 1px solid #dddddd; height:; background-color:#f2ede3;    '>
                            
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<div id="attachment_2205" style="width: 310px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2017/01/640px-Terragen_render.jpg"><img class="wp-image-2205 size-medium" src="/wp-content/uploads/2017/01/640px-Terragen_render-300x225.jpg" alt="Generative Modeling" width="300" height="225" srcset="/wp-content/uploads/2017/01/640px-Terragen_render-300x225.jpg 300w, /wp-content/uploads/2017/01/640px-Terragen_render.jpg 640w" sizes="(max-width: 300px) 100vw, 300px" /></a><p class="wp-caption-text">Generative Modeling can be used in simple geometric constructions up to complex graphics scene generation (<a href="https://en.wikipedia.org/wiki/Scenery_generator">source</a>)</p></div>
</div>

                            </div>
                        </div>
<p>The two concepts are related but have very different geometric semantics and a separate set of legal geometric operations for each. For example, vectors can be linearly combined (scaled and added) to get other vectors, adding two locations has no meaning geometrically, we can add a vector and a point to obtain a new point, etc. There is also some implicit information required to complete these two representations. We assume we have a basic set of 3 <strong>orthogonal axes</strong> that intersect at an <strong>origin </strong>point, we call that construction <strong>the coordinates frame</strong>. If we change the selected frame while keeping the geometric locations and directions as they are in relation to each other, we must update the 3-tuples numerically representing each location and direction in our problem. The main point here is that in order to <strong>generate</strong> a geometric location\direction in 3D Euclidean space we need to use 3 intersecting axes, common for all locations\directions, and 3 real numbers per location\direction. Then we need some algebraic operations, like <a href="https://en.wikipedia.org/wiki/Linear_combination">linear</a> and <a href="https://en.wikipedia.org/wiki/Affine_combination">affine combinations</a>, that we can use to generate a representation of a direction\location from these basic elements.</p>
<p>Let&#8217;s go one step further. If we have two locations P and Q, what can we geometrically generate in our selected space? The first thing we can think of is an <strong>infinite straight line;</strong> a <strong>line segment</strong> and a <strong>ray</strong> are related but different geometric concepts that can be generated by these same two points. What about a point C and a real number r? Maybe a sphere with center C and radius r, or a weighted-point (a location having mass, charge, or density associated with it). What about an infinite flat plane N and a non-parallel line L? We can generate the whole space from these two objects by &#8220;sliding&#8221; N along L. We can also generate a single location (their point of intersection), a single real number (the angle between L and N), a single line (the projection of L on N), a pair of infinite cones by rotating N around L, and many other geometric objects. Just by varying the <strong>geometric operations</strong> we use on N and L we generate new constructions. What if we have an infinitely extending cylinder? We can extract its <strong>axis</strong> (a line), its <strong>radius</strong> (a real number), we can generate many points on its surface (for example to approximate it using a triangular mesh), and we can slice it using flat planes to get circles, ellipses, or pairs of parallel lines.</p>
<div class='dropshadowboxes-container dropshadowboxes-right ' style='width:auto;'>
                            <div class='dropshadowboxes-drop-shadow dropshadowboxes-rounded-corners dropshadowboxes-inside-and-outside-shadow dropshadowboxes-curled dropshadowboxes-effect-default' style=' border: 1px solid #dddddd; height:; background-color:#f2ede3;    '>
                            
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<div id="attachment_2215" style="width: 310px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2017/01/6811026597_c282242276_z.jpg"><img class="size-medium wp-image-2215" src="/wp-content/uploads/2017/01/6811026597_c282242276_z-300x205.jpg" alt="Parametric Architectural Design" width="300" height="205" srcset="/wp-content/uploads/2017/01/6811026597_c282242276_z-300x205.jpg 300w, /wp-content/uploads/2017/01/6811026597_c282242276_z.jpg 640w" sizes="(max-width: 300px) 100vw, 300px" /></a><p class="wp-caption-text">Parametric Architectural Design is one important application of the Geometric Generators pattern (<a href="https://www.flickr.com/photos/eager/6811026597">source</a>)</p></div>
</div>

                            </div>
                        </div>
<p>Now we begin to see a simple pattern and we can abstract its main components:</p>
<ol>
<li>A set of <strong>Geometric Generators</strong>: A set of abstract geometric concepts that can be used to generate new geometric concepts. This set can be specified using abstract relations (arbitrary origin, orthogonal vectors of unit length, etc.), or can be explicitly represented using numbers (e.g. coordinates) relating them to (or generating them from) a common geometric frame of reference.</li>
<li>A <strong>Geometric Algorithm</strong>: This is a sequence of steps to generate new geometric objects from the set of geometric generators. The new objects by themselves can be used as generators for more objects using other geometric algorithms; this includes the possibility of defining <a href="https://en.wikipedia.org/wiki/Recursion_(computer_science)">recursive algorithms</a> and <a href="https://en.wikipedia.org/wiki/Fractal">fractals</a>.</li>
<li>The <strong>Generated Geometric Concepts</strong>: By applying the geometric algorithm to the geometric generators we obtain new geometric objects of interest. This means that we can in principle use the set of generators in place of the generated concepts. For example, instead of listing all points on a line, we can simply state two points on the same line and the linear relation used for generating all the other points. Now we can transform the line (in the general sense of projective transformations for example) by transforming the generating set: its two points.</li>
</ol>
<p>Anyone who worked with Generative Modeling <sup class='endnote'><a href='#en-636-1' id='enref-636-1' onclick='return hhEndnotes_show(636)'>1</a></sup> clearly recognizes and practices this pattern. This understanding is not so common, however, among engineers and computer scientists, especially in the early stages of their study and research. Most of us tend to lose sight of deep geometric abstractions hidden behind the many kinds of algebraic representations we are taught to use in our models. This creates serious problems on many levels for our geometric modeling abilities:</p>
<ul>
<li>On the level of understanding the true geometric nature of the problem.</li>
<li>On the level of verifying the geometric model against possible algebraic, algorithmic, or numerical inconsistencies and special cases.</li>
<li>On the level of generalizing the model to other problems or variations of the same problem.</li>
<li>On the level of implementing the model as software.</li>
<li>On the level of symbolically communicating our ideas effectively to other people.</li>
</ul>
<p>We need to find an algebra that can be used to clearly express our generative pattern of geometry in a unified manner, independent of coordinates, and with algebraic relations generalizable to any space dimension.</p>
<p>&nbsp;</p>
<h3>An Algebra for Geometric Computing</h3>
<div class="su-note" style="border-color:#dad5cc;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;"><div class="su-note-inner su-clearfix" style="background-color:#f2ede3;border-color:#fcfbf9;color:#464646;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;">
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<blockquote><p>The two operations of our understanding, intuition and deduction, on which alone we have said we must rely in the acquisition of knowledge.</p>
<p style="text-align: right;"><em><strong>&#8212; Rene Descartes</strong></em></p>
</blockquote>
</div>
</div></div>
<div class='dropshadowboxes-container dropshadowboxes-right ' style='width:auto;'>
                            <div class='dropshadowboxes-drop-shadow dropshadowboxes-rounded-corners dropshadowboxes-inside-and-outside-shadow dropshadowboxes-curled dropshadowboxes-effect-default' style=' border: 1px solid #dddddd; height:; background-color:#f2ede3;    '>
                            
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<div id="attachment_2220" style="width: 310px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2017/01/1024px-ReverseaccumulationAD.jpg"><img class="size-medium wp-image-2220" src="/wp-content/uploads/2017/01/1024px-ReverseaccumulationAD-300x175.jpg" alt="Automatic Differentiation" width="300" height="175" srcset="/wp-content/uploads/2017/01/1024px-ReverseaccumulationAD-300x175.jpg 300w, /wp-content/uploads/2017/01/1024px-ReverseaccumulationAD-768x448.jpg 768w, /wp-content/uploads/2017/01/1024px-ReverseaccumulationAD.jpg 1024w" sizes="(max-width: 300px) 100vw, 300px" /></a><p class="wp-caption-text">The Algebra of Dual Numbers can be used to implement Automatic Differentiation (<a href="https://commons.wikimedia.org/wiki/File:ReverseaccumulationAD.png">source</a>)</p></div>
</div>

                            </div>
                        </div>
<p>For more than 100 years now we have been using many algebraic systems to symbolically and computationally encode our geometric intuition. Algebra enables the deduction of new relations between symbolic representations having geometric significance. Our bag of classical algebras we use to represent many essentially-geometric concepts and operations include:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Vector_space">Vectors and Vector Spaces</a></li>
<li><a href="https://en.wikipedia.org/wiki/Matrix_(mathematics)">Matrices</a> and <a href="https://en.wikipedia.org/wiki/Tensor">Tensors</a></li>
<li><a href="https://en.wikipedia.org/wiki/Real_number">Real Numbers</a></li>
<li><a href="https://betterexplained.com/articles/intuitive-arithmetic-with-complex-numbers/">Complex Numbers</a></li>
<li>Many kinds of <a href="https://www.youtube.com/watch?v=uw6bpPldp2A">hyper-complex numbers</a> like <a href="https://en.wikipedia.org/wiki/Quaternion">Quaternions</a>, <a href="https://en.wikipedia.org/wiki/Octonion">Octonions</a>, <a href="https://en.wikipedia.org/wiki/Dual_number">Dual Numbers</a>, <a href="https://en.wikipedia.org/wiki/Grassmann_number">Grassmann Numbers</a>, and <a href="https://en.wikipedia.org/wiki/Hypercomplex_number">many others</a>.</li>
</ul>
<p>Using only one of these mathematical tools we can never model all aspects of geometric abstractions found in even a single problem of practical interest. We often need to use two or more of these algebras in our symbolic formulation of geometric ideas. Even worse, some geometric algorithms contain steps that are easier (or only possible) to represent using one algebra and\or set of generators, while other steps require a different algebra and\or set of generators <sup class='endnote'><a href='#en-636-2' id='enref-636-2' onclick='return hhEndnotes_show(636)'>2</a></sup>. ًSo we need many algebraic representations for the same geometric concept, we need conversion steps between the representations. In effect, we need a huge number of algebraically ad-hoc techniques, whatever works, to solve our modeling problems. Sadly, we are completely lost in a jungle of symbolic abstractions, so what can we do?</p>
<p>Similar problems had been solved in some areas of engineering and computer science. Taking a quick look at problems modeled and solved with computers we find unifying algebraic systems at the core. For example:</p>
<ul>
<li>In database design, <a href="https://en.wikipedia.org/wiki/Relational_algebra">Relational Algebra</a> is used for modeling the data stored in relational databases, and defining queries on it.</li>
<li>In logic design, <a href="https://en.wikipedia.org/wiki/Boolean_algebra">Boolean Algebra</a> is fundamental in the development of digital electronics and is provided for in all modern programming languages.</li>
<li>In data science, neural computing, computer graphics, and many other applications <a href="http://www.sosmath.com/matrix/matrix.html">Matrix Algebra</a> is the base of most computations.</li>
<li>In optimization, simulation, and <a href="http://www.autodiff.org/?module=Applications">many other applications</a>, the <a href="https://en.wikipedia.org/wiki/Dual_numbers">algebra of dual numbers</a> is the base for implementing <a href="https://en.wikipedia.org/wiki/Automatic_differentiation">Automatic Differentiation</a>, a much better practical replacement for numerical differentiation and <a href="https://en.wikipedia.org/wiki/Finite_difference_method">finite difference</a> methods.</li>
</ul>
<div class='dropshadowboxes-container dropshadowboxes-right ' style='width:auto;'>
                            <div class='dropshadowboxes-drop-shadow dropshadowboxes-rounded-corners dropshadowboxes-inside-and-outside-shadow dropshadowboxes-curled dropshadowboxes-effect-default' style=' border: 1px solid #dddddd; height:; background-color:#f2ede3;    '>
                            
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<div id="attachment_2237" style="width: 310px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2017/01/Conformal_Embedding.jpg"><img class="size-medium wp-image-2237" src="/wp-content/uploads/2017/01/Conformal_Embedding-300x256.jpg" alt="Conformal Embedding" width="300" height="256" srcset="/wp-content/uploads/2017/01/Conformal_Embedding-300x256.jpg 300w, /wp-content/uploads/2017/01/Conformal_Embedding.jpg 531w" sizes="(max-width: 300px) 100vw, 300px" /></a><p class="wp-caption-text">The Conformal Embedding (<a href="https://commons.wikimedia.org/wiki/File:Conformal_Embedding.svg">source</a>)</p></div>
</div>

                            </div>
                        </div>
<p>For geometric computing, however, we don&#8217;t have a single unified algebraic system for our problems; this was my incorrect understanding until 2003 when I first read two online tutorials on <strong>Geometric Algebra</strong> <sup class='endnote'><a href='#en-636-3' id='enref-636-3' onclick='return hhEndnotes_show(636)'>3</a></sup>. I discovered that all the above algebraic systems are isomorphic to some GA or one of its subalgebras, so we can seamlessly integrate them together. I discovered that most GA relations are geometrically significant and independent of space dimension and coordinate frames.</p>
<p>Since then I discovered firsthand how Geometric Algebra shines as an algebraic system that forces us to think about geometry from the generative perspective I described above. I experienced a high level of clarity, unification, and generalization of geometric ideas I&#8217;ve never felt before. Many ideas became connected immediately after formulating them in the language of Geometric Algebra. This experience is a true ascension of the geometric mind!</p>
<p>Almost all researchers working with Geometric Algebra have a similar experience. For example, Pablo Colapinto describes Geometric Algebra as <sup class='endnote'><a href='#en-636-4' id='enref-636-4' onclick='return hhEndnotes_show(636)'>4</a></sup>:</p>
<blockquote><p>Geometric algebra (GA) is a combinatoric system of spatial logic based on William Clifford’s hypercomplex algebras of the 19th century. Holistic, scalable, and filled with &#8220;common sense&#8221;, GA integrates various methods for modelling and engineering dynamic systems. [&#8230;] The now classic work by the physicist David Hestenes, New Foundations for Classical Mechanics (1986) makes a strong argument for learning this approach by demonstrating the compactness of the math, while the most recent text by cyberneticist Eduardo Bayro-Corrochano, Geometric Computing: For Wavelet Transforms, Robot Vision, Learning, Control and Action (2010), demonstrates the expressivity of its powers for geometric reasoning. Many other references make a similar case: with its isomorphisms, geometric algebras encapsulate many other mathematical systems. With its outermorphisms, solutions worked out in smaller dimensions can often be extrapolated to higher dimensions. It is an expressive logic that allows intuitive mathematical experimentation across a widening range of disciplines.</p>
<p>Working with the algebra, physicists have developed a conformal split mapping of a 3 dimensional Euclidean space G(3) into a 5-dimensional one, G(4,1), based on Riemannian projection of 3D Euclidean space (R3) onto a hypersphere. Introduced into the geometric algebra community by Hongbo Li, Alan Rockwood, and David Hestenes in 2001, the conformal model greatly simplifies and generalizes calculations of general rigid body movements in Euclidean space. As a mathematical system for describing closed form solutions within Euclidean, spherical, and hyperbolic geometries, conformal geometric algebra opens the door to a rich set of Möbius transformations typically restricted to the 2D plane. The operators which reflect, rotate, translate, twist, dilate, and boost other elements and objects are called versors.</p></blockquote>
<p>&nbsp;</p>
<h3>The Universal Matrix</h3>
<div class="su-note" style="border-color:#dad5cc;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;"><div class="su-note-inner su-clearfix" style="background-color:#f2ede3;border-color:#fcfbf9;color:#464646;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;">
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<blockquote><p>We may always depend on it that algebra, which cannot be translated into good English and sound common sense, is bad algebra.</p>
<p style="text-align: right;"><em><strong>&#8212; William Kingdon Clifford</strong></em></p>
</blockquote>
</div>
</div></div>
<div class='dropshadowboxes-container dropshadowboxes-right ' style='width:auto;'>
                            <div class='dropshadowboxes-drop-shadow dropshadowboxes-rounded-corners dropshadowboxes-inside-and-outside-shadow dropshadowboxes-curled dropshadowboxes-effect-default' style=' border: 1px solid #dddddd; height:; background-color:#f2ede3;    '>
                            
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<div id="attachment_2211" style="width: 310px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2017/01/NLA.jpg"><img class="wp-image-2211 size-medium" src="/wp-content/uploads/2017/01/NLA-300x233.jpg" alt="Numerical Linear Algebra" width="300" height="233" srcset="/wp-content/uploads/2017/01/NLA-300x233.jpg 300w, /wp-content/uploads/2017/01/NLA.jpg 691w" sizes="(max-width: 300px) 100vw, 300px" /></a><p class="wp-caption-text">Many problems in engineering can be modeled and solved using Numerical Linear Algebra software (<a href="https://commons.wikimedia.org/wiki/File:Navier_Stokes_Laminar.svg">source</a>)</p></div>
</div>

                            </div>
                        </div>
<p>Many would argue that we can use matrices to represent all kinds of algebras used in practice including <a href="https://en.wikipedia.org/wiki/Clifford_algebra">Clifford Algebras</a>; an important subject in modern mathematics known as <a href="https://en.wikipedia.org/wiki/Representation_theory">Representation Theory</a>. This is true, theoretically speaking, but often impractical in many cases. The basic structure of a matrix and the simplicity of its addition and matrix multiplication operations is both a blessing and a curse.</p>
<p>Because matrices can represent many things, including raw lists\tables of numbers, we can use them as a universal low-level representation in our software implementations. Many numerical software systems used by engineers and computer scientists already do this: <a href="https://www.mathworks.com/products/matlab.html">MATLAB</a>, <a href="http://www.numpy.org/">NumPy</a>, <a href="http://www.alglib.net/">ALGLIB</a>, etc <sup class='endnote'><a href='#en-636-5' id='enref-636-5' onclick='return hhEndnotes_show(636)'>5</a></sup>. In addition, many applications like <a href="https://en.wikipedia.org/wiki/Transformation_matrix">computer graphics</a> and <a href="http://planning.cs.uiuc.edu/node111.html">robotics</a> use <a href="https://en.wikipedia.org/wiki/Homogeneous_coordinates">homogenous-coordinate matrices</a> as a universal representation for Euclidean, affine, and projective transformations. This is the good part, we can develop all our algorithms in the language of matrices based on Numerical Linear Algebra algorithms <sup class='endnote'><a href='#en-636-6' id='enref-636-6' onclick='return hhEndnotes_show(636)'>6</a></sup>.</p>
<p>The prices we have to pay for using such simple universal algebraic structure are numerous, for example:</p>
<ul>
<li><strong>Geometric Significance:</strong> Looking at an equation, expression or algorithm expressed as operations on matrices we often can&#8217;t easily understand its geometric significance. Many algebraic operations on matrices, like transpose, eigenanalysis, determinants, etc. are difficult to interpret in a geometrically meaningful way related to the original problem. In addition, expressing everything using matrices allows for incorrectly applying algebraic operations leading to geometrically meaningless results in the context of our problem. One example is obtaining complex eigenvalues when analyzing a real transformation matrix. These complex values can indicate errors in the algorithm, computational instabilities, or data that must be removed before doing the next step. Blindly accepting all outputs can cause many problems.</li>
<li><strong>Data Redundancy:</strong> For many geometric problems a full matrix representation is too much. Symmetric matrices, diagonal matrices, triangular matrices, and orthogonal matrices all contain numerical redundancies. As an example, one famous <a href="https://en.wikipedia.org/wiki/Matrix_representation_of_conic_sections">matrix representation of Conic Sections</a> uses symmetric matrices. Passing this representation to a matrix processing software library may need memory and processing more than necessary.</li>
<li><strong>Extracting Geometric Information:</strong> Looking at the numbers inside a matrix we can&#8217;t immediately extract important geometric information. For example, given a homogeneous general rotation matrix, we can&#8217;t just find the axis and angle of rotation by looking at its numbers. We need to <a href="https://en.wikipedia.org/wiki/Rotation_matrix#Conversion_from_and_to_axis-angle">apply eigenanalysis</a> to extract this important piece of geometric information.</li>
<li><strong>Geometric Type Safety:</strong> Compatibility rules for operations on matrices are too simple for modular software design. It might be algebraically acceptable, for example, to multiply two matrices, but geometrically wrong; resulting in an intermediate result that should have been automatically caught as a compile-time or run-time error. This may lead to many problems in verifying geometric algorithms and code debugging.</li>
<li><strong>Domain Specific Optimizations:</strong> Because matrices are numerically redundant, difficult to interpret geometrically, and low-level universal representations, it&#8217;s usually very difficult to apply high-level domain-specific optimizations to the geometric algorithm or computer code. This is one of the main reasons other kinds of algebra are used instead of matrices in many applications.</li>
<li><strong>Communication of Geometric Ideas:</strong> Teaching and communicating abstract geometric ideas using matrices is difficult. Matrix equations are good for low-level computations, but symbolically not suitable as a high-level language for expressing our geometric thoughts clearly. We need much training to look at a matrix equation in some application domain and understand its geometric meaning.</li>
</ul>
<p>&nbsp;</p>
<h3>The Geometric Multivector</h3>
<div class="su-note" style="border-color:#dad5cc;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;"><div class="su-note-inner su-clearfix" style="background-color:#f2ede3;border-color:#fcfbf9;color:#464646;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;">
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<blockquote><p>You don’t see something until you have the right metaphor to let you perceive it.</p>
<p style="text-align: right;"><em><strong>&#8212; James Gleick, Chaos: Making a New Science</strong></em></p>
</blockquote>
</div>
</div></div>
<div class='dropshadowboxes-container dropshadowboxes-right ' style='width:auto;'>
                            <div class='dropshadowboxes-drop-shadow dropshadowboxes-rounded-corners dropshadowboxes-inside-and-outside-shadow dropshadowboxes-curled dropshadowboxes-effect-default' style=' border: 1px solid #dddddd; height:; background-color:#f2ede3;    '>
                            
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<div id="attachment_2272" style="width: 272px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2017/01/Geometric-Product.jpg"><img class="size-medium wp-image-2272" src="/wp-content/uploads/2017/01/Geometric-Product-262x300.jpg" alt="Geometric Product" width="262" height="300" srcset="/wp-content/uploads/2017/01/Geometric-Product-262x300.jpg 262w, /wp-content/uploads/2017/01/Geometric-Product.jpg 482w" sizes="(max-width: 262px) 100vw, 262px" /></a><p class="wp-caption-text">The sophisticated mathematical structure of Geometric Algebra resulting from the geometric product of its basis blades (<a href="http://www.euclideanspace.com/maths/algebra/clifford/d3/">source</a>)</p></div>
</div>

                            </div>
                        </div>
<p>Many of these problems can be avoided using Geometric Algebra and its <a href="https://en.wikipedia.org/wiki/Multivector">multivectors</a>. GA has a much richer mathematical structure than matrix algebra as I will explain shortly. This sophisticated structure requires some time to learn but it&#8217;s logical and universal, so the learning time is well spent. Studying and using GA for several years I found many representational advantages of using multivectors over matrices, for example:</p>
<ul>
<li><strong>Geometric Significance</strong>: Two main types of GA multivectors exist: <a href="https://en.wikipedia.org/wiki/Blade_(geometry)">Blades</a>, and <a href="https://en.wikipedia.org/wiki/Versor">Versors</a>. Blades can represent many geometric objects depending on the selected GA like directions, positions, lines, planes, hyperplanes, point-pairs, circles, spheres, tangent planes, conic sections, and much more. Versors can represent orthogonal transformations in the selected GA including translations, rotations, uniform scaling, affine and projective transformations, conformal transformations, and more. The geometric significance of multivectors is clear.</li>
<li><strong>Sparse Representation</strong>: Unlike matrices, GA&#8217;s multivectors representing significant geometric objects are practically sparse. This leads to the possibility of implementing many compiler optimizations to get the minimum possible sequence of computations required for some geometric algorithm.</li>
<li><strong>Extracting Geometric Information</strong>: The numerical components of many important multivectors are directly related to the geometric generators of the multivector. For example, it&#8217;s straightforward to extract the center and radius information from a <a href="https://en.wikipedia.org/wiki/Conformal_geometric_algebra">Conformal GA</a> multivector just be reading the coefficients of its basis blades. Much information can be extracted from multivectors using simple standard GA operations with direct and clear geometric meaning.</li>
<li><strong>Geometric Type Safety</strong>: Multivectors representing different geometric concepts usually contain different basis blades with non-zero coefficients. By simple inspection of a multivector, we can immediately understand its meaning and check its semantics. For example, the Conformal GA multivector representing a circle can have a radius with imaginary value. This indicates, for example, that two spheres do not intersect and the resulting multivector is of correct type: an imaginary circle with absolute radius related to the distance between the two spheres.</li>
<li><strong>Domain-Specific Modeling</strong>: Because of these beautiful properties, we can directly represent our high-level domain knowledge (i.e. Geometric Concepts and Algorithms) using GA&#8217;s operations on multivectors. Designing software systems for Geometric Computing can be on the same path that database design and logic circuits design took before.</li>
<li><strong>Communication of Geometric Ideas:</strong> GA&#8217;s symbolic multivector expressions are compact and geometrically significant. Just by knowing the meaning associated with multivectors in some expression we can easily follow, after some general application-independent training, its geometric significance. This feature makes teaching and geometric information exchange using Geometric Algebra a pleasant and mind opening experience.</li>
</ul>
<p>Naturally, we need both matrix and multivector representations. We just need to select the most appropriate one for the problem. We may, for example, select to express our problem using multivectors for teaching purposes, while coding computations for the same problem with matrices at a later stage. The good news here is that we can create <a href="https://en.wikipedia.org/wiki/Optimizing_compiler">optimizing compilers</a> that automatically generate matrices from GA operations on multivectors. We need to explore both methods of representation and never walk with the &#8220;hammer of matrices&#8221; as our only symbolic tool for dealing with all problems.</p>
<p>&nbsp;</p>
<h3>Geometric Algebra: The Way Ahead</h3>
<div class="su-note" style="border-color:#dad5cc;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;"><div class="su-note-inner su-clearfix" style="background-color:#f2ede3;border-color:#fcfbf9;color:#464646;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;">
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<blockquote><p>Instead of five hundred thousand average algebra teachers, we need one good algebra teacher. We need that teacher to create software, videotape themselves, answer questions, let your computer or the iPad teach algebra&#8230; The hallmark of any good technology is that it destroys jobs.</p>
<p style="text-align: right;"><em><strong>&#8212; Michael J. Saylor</strong></em></p>
</blockquote>
</div>
</div></div>
<p>Geometric Algebra is being explored in many applications, for example:</p>
<ul>
<li>Physics</li>
<li>Computer Graphics</li>
<li>Geometric Modeling</li>
<li>Robotics</li>
<li>Geographical Information Science</li>
<li>Electromagnetics</li>
<li>Computer Vision</li>
<li>Neural Computing</li>
<li>Automatic Theorem Proving</li>
<li>Electrical Power Systems</li>
<li>Signal and Image Processing</li>
<li>Graph Theory</li>
<li>Data Visualization</li>
<li>Mechanical Engineering</li>
</ul>
<p>Many opportunities exist for GA-based research and teaching, for example:</p>
<ul>
<li>Very few researchers develop efficient numerical algorithms for GA multivectors. Numerical Linear Algebra on matrices is much developed in comparison. We need to concentrate on this important task for creating efficient numerical algorithms to deal with multivectors.</li>
<li>We need to reformulate and express common geometric modeling tasks using Geometric Algebra. For example, we need to write books on Computer Graphics or Robotics where each equation is expressed using GA multivectors, not matrices.</li>
<li>We need to explore algorithmic and computational aspects of GA-based models. We need to design optimizing compilers that can understand and translate standard GA operations just like current compilers seamlessly understand floating point numbers.</li>
<li>We need to use GA as a primary language for teaching geometric concepts in all sorts of engineering activities. The use of Geometric Algebra in schools is a big step towards the future of GA adoption and development.</li>
</ul>
<p><a href="/index.php/2017/01/28/ga-elements/" target="_blank" rel="noopener">In the following post</a>, I will talk about the main mathematical elements of Geometric Algebra and how they integrate to create its full power and beauty. This kind of information is a good starting point for anyone new to the subject and in need for a clear roadmap to follow.</p>
<hr />
<div class="su-note" style="border-color:#dad5cc;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;"><div class="su-note-inner su-clearfix" style="background-color:#f2ede3;border-color:#fcfbf9;color:#464646;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;">
<div class="su-animate" style="visibility:hidden;-webkit-animation-duration:2s;-webkit-animation-delay:0s;animation-duration:2s;animation-delay:0s;" data-animation="fadeInUp" data-duration="2" data-delay="0">
<p style="text-align: center;"><span style="font-family: 'Traditional Arabic'; font-size: 28px;"><strong>تم بحمد الله الجمعة 15 ربيع الآخر 1438هـ</strong></span></p>
</div>
</div></div>
<hr />
<p>&nbsp;</p>
<div class='endnotes' id='hhendnotes-636'>
<ol>
<li id='en-636-1'>See for example the <a href="http://www.generative-modeling.org/">Generative Modeling Language</a> (GML) by Sven Havemann described in his very interesting <a href="https://publikationsserver.tu-braunschweig.de/receive/dbbs_mods_00000008">Ph.D. dissertation</a>. For a recent survey on this subject see &#8220;A Survey of Algorithmic Shapes&#8221; by Ulrich Krispel et al available <a href="http://www.mdpi.com/2072-4292/7/10/12763">here</a> <span class='endnotereverse'><a href='#enref-636-1'>&#8617;</a></span></li>
<li id='en-636-2'>For example rotations of vectors in 3D are best done using Quaternions while other affine transformations, especially composite ones, are better done using matrices! <span class='endnotereverse'><a href='#enref-636-2'>&#8617;</a></span></li>
<li id='en-636-3'>Jaap Suter&#8217;s &#8220;<a href="http://www.jaapsuter.com/geometric-algebra/">Geometric Algebra Primer</a>&#8221; and Mikael Nilsson&#8217;s &#8220;<a href="http://cid.nada.kth.se/pdf/CID-201.pdf">Geometric Algebra with Conzilla: Building a Conceptual Web of Mathematics</a>&#8221; <span class='endnotereverse'><a href='#enref-636-3'>&#8617;</a></span></li>
<li id='en-636-4'>In his 2011 M.Sc. thesis &#8220;VERSOR: Spatial Computing with Conformal Geometric Algebra&#8221; <a href="http://www.wolftype.com/versor/colapinto_masters_final_02.pdf">available here</a>. <span class='endnotereverse'><a href='#enref-636-4'>&#8617;</a></span></li>
<li id='en-636-5'>See the list of <a href="http://www.netlib.org/utk/people/JackDongarra/la-sw.html">Freely Available Software for Linear Algebra</a> composed by Jack Dongarra and Hatem Ltaief, University of Tennessee <span class='endnotereverse'><a href='#enref-636-5'>&#8617;</a></span></li>
<li id='en-636-6'><a href="https://en.wikipedia.org/wiki/Numerical_linear_algebra">Numerical Linear Algebra</a> is the study of algorithms for performing linear algebra computations, most notably matrix operations, on computers. It is often a fundamental part of engineering and computational science problems, such as image and signal processing, telecommunication, computational finance, materials science simulations, structural biology, data mining, bioinformatics, fluid dynamics, and many other areas. Such software relies heavily on the development, analysis, and implementation of state-of-the-art algorithms for solving various numerical linear algebra problems, in large part because of the role of matrices in finite difference and finite element methods. <span class='endnotereverse'><a href='#enref-636-6'>&#8617;</a></span></li>
</ol>
</div>
<p>The post <a rel="nofollow" href="/index.php/2017/01/13/ga-computing3/">Geometric Algebra: Ascension of the Mind</a> appeared first on <a rel="nofollow" href="/">Geometric Algebra Explorer</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/2017/01/13/ga-computing3/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>

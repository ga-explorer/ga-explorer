<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Teaching &#8211; Geometric Algebra Explorer</title>
	<atom:link href="/index.php/tag/teaching/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Voyaging the Computational Universe with Geometric Algebra</description>
	<lastBuildDate>Sun, 05 Nov 2017 20:11:34 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.8.3</generator>

<image>
	<url>/wp-content/uploads/2016/12/cropped-GAExplorer-Icon-150x150.jpg</url>
	<title>Teaching &#8211; Geometric Algebra Explorer</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Edifying The Young</title>
		<link>/index.php/2017/04/26/edifying-the-young/</link>
		<pubDate>Wed, 26 Apr 2017 08:00:20 +0000</pubDate>
		<dc:creator><![CDATA[Ahmad Eid]]></dc:creator>
				<category><![CDATA[GA Books]]></category>
		<category><![CDATA[GA Math]]></category>
		<category><![CDATA[Geometric Algebra]]></category>
		<category><![CDATA[Interview]]></category>
		<category><![CDATA[Geometric Calculus]]></category>
		<category><![CDATA[Learning]]></category>
		<category><![CDATA[Linear Algebra]]></category>
		<category><![CDATA[Teaching]]></category>

		<guid isPermaLink="false">https://gacomputing.info/?p=2731</guid>
		<description><![CDATA[<p>Two elementary courses common to modern physics, mathematics, and engineering curricula are Linear Algebra and Vector Calculus. Geometric Algebra is a natural and powerful extension of linear algebra and Geometric Calculus is even more so for vector calculus.</p>
<p>In this post, I interview Dr. Alan Macdonald who talks about his experience with both subjects and how he contributes in educating young undergraduate students about them through his books and online videos.</p>
<p>The post <a rel="nofollow" href="/index.php/2017/04/26/edifying-the-young/">Edifying The Young</a> appeared first on <a rel="nofollow" href="/">Geometric Algebra Explorer</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p><a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=%2Findex.php%2F2017%2F04%2F26%2Fedifying-the-young%2F&amp;linkname=Edifying%20The%20Young" title="Facebook" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=%2Findex.php%2F2017%2F04%2F26%2Fedifying-the-young%2F&amp;linkname=Edifying%20The%20Young" title="Twitter" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=%2Findex.php%2F2017%2F04%2F26%2Fedifying-the-young%2F&amp;linkname=Edifying%20The%20Young" title="Google+" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=%2Findex.php%2F2017%2F04%2F26%2Fedifying-the-young%2F&amp;linkname=Edifying%20The%20Young" title="LinkedIn" rel="nofollow noopener" target="_blank"></a><a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share#url=%2Findex.php%2F2017%2F04%2F26%2Fedifying-the-young%2F&amp;title=Edifying%20The%20Young" data-a2a-url="/index.php/2017/04/26/edifying-the-young/" data-a2a-title="Edifying The Young"></a></p><div class="pf-content"><p><a href="/wp-content/uploads/2017/04/mathematics-1622448_1280.jpg"><img class="aligncenter size-large wp-image-2759" src="/wp-content/uploads/2017/04/mathematics-1622448_1280-1024x682.jpg" alt="" width="1024" height="682" srcset="/wp-content/uploads/2017/04/mathematics-1622448_1280-1024x682.jpg 1024w, /wp-content/uploads/2017/04/mathematics-1622448_1280-300x200.jpg 300w, /wp-content/uploads/2017/04/mathematics-1622448_1280-768x512.jpg 768w, /wp-content/uploads/2017/04/mathematics-1622448_1280.jpg 1280w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></p>
<span class="dropcap">T</span>wo elementary courses common to modern physics, mathematics, and engineering curricula are Linear Algebra and Vector Calculus. Geometric Algebra is a natural and powerful extension of linear algebra and Geometric Calculus is even more so for vector calculus.</p>
<p>In this post, I interview Dr. Alan Macdonald who talks about his experience with both subjects and how he contributes in educating young undergraduate students about them through his books and <a href="https://www.youtube.com/channel/UCymE67THrWoeTABxzJm1wdg/playlists" target="_blank" rel="noopener noreferrer">online videos</a>.</p>
<hr />
<p><a href="/wp-content/uploads/2017/04/macdonald.jpeg"><img class="alignright size-medium wp-image-2757" src="/wp-content/uploads/2017/04/macdonald-233x300.jpeg" alt="Dr. Alan Macdonald" width="233" height="300" srcset="/wp-content/uploads/2017/04/macdonald-233x300.jpeg 233w, /wp-content/uploads/2017/04/macdonald.jpeg 273w" sizes="(max-width: 233px) 100vw, 233px" /></a><a href="http://faculty.luther.edu/~macdonal/" target="_blank" rel="noopener noreferrer">Dr. Alan Macdonald</a> is Professor Emeritus of Mathematics at Luther College in Decorah Iowa. He received a Ph.D. in mathematics from The University of Michigan in 1970. His research interests include geometric algebra and the foundations of physics.</p>
<p>Dr. Alan is the author of two excellent books that introduce Geometric Algebra and Geometric Calculus to undergraduate students. In his first book <a href="http://faculty.luther.edu/~macdonal/laga/index.html" target="_blank" rel="noopener noreferrer"><em><strong>Linear and Geometric Algebra</strong></em></a>, he develops the first undergraduate text to cover the essentials of linear algebra and its extension to geometric algebra. Prof. David Hestenes commented on his first book saying:</p>
<blockquote><p>I commend Alan Macdonald for his excellent book! His exposition is clean and spare. He has done a fine job of engineering a gradual transition from standard views of linear algebra to the perspective of geometric algebra. The book is sufficiently conventional to be adopted as a textbook by an adventurous teacher without getting flack from colleagues. Yet it leads to gems of geometric algebra that are likely to delight thoughtful students and surprise even the most experienced instructors.</p></blockquote>
<p>His second book <a href="http://faculty.luther.edu/~macdonal/vagc/index.html" target="_blank" rel="noopener noreferrer"><em><strong>Vector and Geometric Calculus</strong></em></a> distinguishes itself from similar books on advanced calculus by two attributes: its thoroughgoing use of Geometric Algebra and the clarity of its exposition at an undergraduate level.</p>
<hr />
<p><span style="color: #000080;"><strong>Tell us about your life work in mathematics. What motivations and goals drove you through your research and teaching career? What obstacles did you face and how did you overcome them?</strong></span></p>
<p>I have taught and published in several different areas of mathematics and physics. I faced no serious obstacles in pursuing my varied interests (except to find more than 24 hours in a day). Lucky!</p>
<p>&nbsp;</p>
<p><span style="color: #000080;"><strong>Tell us about what got you interested in Geometric Algebra. As a mathematician, what kinds of ideas in physics and geometry do you find naturally expressible using GA?</strong></span></p>
<p><a href="/wp-content/uploads/2017/04/cranium-2099129_640.png"><img class="alignright size-medium wp-image-2776" src="/wp-content/uploads/2017/04/cranium-2099129_640-300x187.png" alt="Exchange Ideas" width="300" height="187" srcset="/wp-content/uploads/2017/04/cranium-2099129_640-300x187.png 300w, /wp-content/uploads/2017/04/cranium-2099129_640.png 640w" sizes="(max-width: 300px) 100vw, 300px" /></a>I read strong claims about geometric algebra and decided to look for myself. I was smitten. I found that geometric algebra and its extension to geometric calculus unify, simplify, and generalize vast areas of mathematics involving geometric ideas, including linear algebra, vector calculus, complex analysis, exterior algebra and calculus, tensor algebra and calculus, quaternions (3D spinors), and euclidean, non-euclidean, and projective geometries. I also found that GA provides a common mathematical language for many areas of physics (classical and quantum mechanics, electrodynamics, special and general relativity), computer science (graphics, robotics, computer vision), engineering, and other fields. People in disparate fields can now talk to each other!</p>
<p>&nbsp;</p>
<p><span style="color: #000080;"><strong>Some people say &#8220;Why should we learn and use GA when we already have many mathematical tools that work?&#8221;. How do you respond to this kind of question?</strong></span></p>
<p>My response: <em><strong>Geometric algebra unifies many of your mathematical tools and works better than any of them</strong>.</em> Unfortunately, this has not been sufficient to induce many to switch. GA takes time to learn. And once learned, there is the problem of communicating with others who haven&#8217;t learned. Nevertheless, geometric algebra is gaining adherents, slowly but surely.</p>
<p>&nbsp;</p>
<p><span style="color: #000080;"><strong>Tell us about the relation between Geometric Algebra and Linear Algebra. Can the basic ideas of linear algebra be reformulated using GA? How is that? What are the benefits of such reformulations and developments?</strong></span></p>
<p><a href="/wp-content/uploads/2017/04/Angular-Momentum-Bivector-and-Pseudovector.png"><img class="alignright size-medium wp-image-2778" src="/wp-content/uploads/2017/04/Angular-Momentum-Bivector-and-Pseudovector-300x205.png" alt="Angular Momentum Bivector and Pseudovector" width="300" height="205" srcset="/wp-content/uploads/2017/04/Angular-Momentum-Bivector-and-Pseudovector-300x205.png 300w, /wp-content/uploads/2017/04/Angular-Momentum-Bivector-and-Pseudovector.png 512w" sizes="(max-width: 300px) 100vw, 300px" /></a>Geometric algebra is a superset of linear algebra, with more objects, multivectors, and more operations; for example, the geometric product. So anything that linear algebra can do geometric algebra can do. Even within linear algebra, geometric algebra brings advantages. Here is a simple example. Consider the orthogonal complement of a subspace: the set of vectors orthogonal to all vectors in the subspace. For both linear and geometric algebra this <strong><em>geometric</em> </strong>definition tells us what the orthogonal complement <strong><em>is</em></strong>. Geometric algebra adds algebra, providing a very simple way to <strong><em>compute</em> </strong>the complement (as a dual), something linear algebra can&#8217;t do. This illustrates the name <em><strong>Geometric Algebra</strong></em>: it does geometry algebraically.</p>
<p>&nbsp;</p>
<p><span style="color: #000080;"><strong>Prof. David Hestenes talked in one of his lectures about your first undergraduates GA book and how it could have been a joint project. In what aspects does your vision for introducing GA to students relate to his?</strong></span></p>
<p>I share David Hestenes&#8217; vision of wide acceptance of GA and the advantages this will bring.</p>
<p>A vital aspect of making this happen is encouraging and enabling GA&#8217;s inclusion in the undergraduate mathematics curriculum. The only way that mathematics faculties will consider this is to have available GA texts written in traditional mathematics textbook style. This is my small contribution to Hestenes&#8217; vision.</p>
<p>Mathematicians have been infuriatingly slow in becoming interested in geometric algebra. We are repeating the short-sightedness of 120 years ago when <em><strong>Engineers welcomed Gibbs&#8217;s and Heaviside&#8217;s vector analysis, though the mathematicians did not</strong> </em><sup class='endnote'><a href='#en-2731-1' id='enref-2731-1' onclick='return hhEndnotes_show(2731)'>1</a></sup>.</p>
<p>&nbsp;</p>
<p><span style="color: #000080;"><strong>What kind of software tools do you think should be used in explaining GA and GC to undergraduate students? Are there any missing features you would like to see in current tools?</strong></span></p>
<p><a href="/wp-content/uploads/2017/04/Sympy-160px.png"><img class="alignright wp-image-2774" src="/wp-content/uploads/2017/04/Sympy-160px-300x300.png" alt="SymPy" width="227" height="227" srcset="/wp-content/uploads/2017/04/Sympy-160px-300x300.png 300w, /wp-content/uploads/2017/04/Sympy-160px-150x150.png 150w, /wp-content/uploads/2017/04/Sympy-160px-160x160.png 160w, /wp-content/uploads/2017/04/Sympy-160px-320x320.png 320w, /wp-content/uploads/2017/04/Sympy-160px.png 500w" sizes="(max-width: 227px) 100vw, 227px" /></a>I chose <a href="http://docs.sympy.org/0.7.0/modules/galgebra/GA/GAsympy.html" target="_blank" rel="noopener noreferrer">Alan Bromborsky&#8217;s GAlgebra</a> for my texts because it is free, it is multiplatform, it does <strong><em>symbolic</em> </strong>calculations, and it is well designed. But it is far from everything I could ask for: its syntax for expressions is sometimes awkward; it requires several other programs, e.g., Python, making installation difficult for some; and it has no graphics capability.</p>
<p>I would like to see a program with GAlgebra&#8217;s strengths but not its shortcomings.</p>
<p>&nbsp;</p>
<p><span style="color: #000080;"><strong>What are your expectations of the future of GA &amp; GC in teaching?</strong></span></p>
<p>My experience is in teaching undergraduate mathematics in the United States, so I will speak to that. Students typically take a year of scalar calculus in their first year of college, then courses in linear algebra and vector calculus in their second year.</p>
<p>The most natural place to introduce GA &amp; GC is right after scalar calculus. I believe that the current second-year linear algebra and vector calculus courses should be renamed <em>Geometric Algebra</em> and <em>Geometric Calculus</em>, their purpose being to provide the basic vocabulary of mathematics in dimensions greater than one. By judiciously trimming the current courses and taking advantage of the simplifications of GA &amp; GC, a lot of GA &amp; GC can be covered. My two textbooks <a href="https://www.amazon.com/Linear-Geometric-Algebra-Alan-Macdonald/dp/1453854932" target="_blank" rel="noopener noreferrer"><em>Linear and Geometric Algebra</em></a> and <a href="https://www.amazon.com/Vector-Geometric-Calculus-Alan-Macdonald/dp/1480132454/ref=pd_bxgy_14_img_2?_encoding=UTF8&amp;pd_rd_i=1480132454&amp;pd_rd_r=YMSWSBWDXT255WXMRTN6&amp;pd_rd_w=PZx9C&amp;pd_rd_wg=p6xhV&amp;psc=1&amp;refRID=YMSWSBWDXT255WXMRTN6" target="_blank" rel="noopener noreferrer"><em>Vector and Geometric Calculus</em></a> are attempts at this.</p>
<p>&nbsp;</p>
<p><span style="color: #000080;"><strong>Tell us about the mathematical developments you think are still necessary for GA &amp; GC to take their rightful place as the primary mathematical modeling language for this century. What kind of research should be conducted to effectively relate GA &amp; GC to mainstream mathematics and applications?</strong></span></p>
<p><a href="/wp-content/uploads/2017/04/2000px-Triple_Integral_Example_2.svg_.png"><img class="alignright size-medium wp-image-2775" src="/wp-content/uploads/2017/04/2000px-Triple_Integral_Example_2.svg_-300x300.png" alt="Triple Integral Example" width="300" height="300" srcset="/wp-content/uploads/2017/04/2000px-Triple_Integral_Example_2.svg_-300x300.png 300w, /wp-content/uploads/2017/04/2000px-Triple_Integral_Example_2.svg_-150x150.png 150w, /wp-content/uploads/2017/04/2000px-Triple_Integral_Example_2.svg_-768x768.png 768w, /wp-content/uploads/2017/04/2000px-Triple_Integral_Example_2.svg_-1024x1024.png 1024w, /wp-content/uploads/2017/04/2000px-Triple_Integral_Example_2.svg_-160x160.png 160w, /wp-content/uploads/2017/04/2000px-Triple_Integral_Example_2.svg_-320x320.png 320w" sizes="(max-width: 300px) 100vw, 300px" /></a>GA &amp; GC are well developed at the elementary level, ready for use. But there are problems to be solved before they can take their rightful place.</p>
<p>We face a chicken and egg problem: students must learn GA &amp; GC to apply them, and those applying vector methods, but not brought up on GA &amp; GC, must push for their inclusion in the curriculum. And if students learn GA &amp; GC in their second year, this cannot be a dead end: instructors in later courses must use them in their courses. Another problem: people are reluctant to publish using a mathematical formalism unknown to most. We can only do our best, making incremental progress until a critical mass is achieved.</p>
<div class='endnotes' id='hhendnotes-2731'>
<ol>
<li id='en-2731-1'>M. Kline, <em>Mathematical Thought from Ancient to Modern Times</em>, Oxford University Press, New York (1972), 791. <span class='endnotereverse'><a href='#enref-2731-1'>&#8617;</a></span></li>
</ol>
</div>
</div><p><a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=%2Findex.php%2F2017%2F04%2F26%2Fedifying-the-young%2F&amp;linkname=Edifying%20The%20Young" title="Facebook" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=%2Findex.php%2F2017%2F04%2F26%2Fedifying-the-young%2F&amp;linkname=Edifying%20The%20Young" title="Twitter" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=%2Findex.php%2F2017%2F04%2F26%2Fedifying-the-young%2F&amp;linkname=Edifying%20The%20Young" title="Google+" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=%2Findex.php%2F2017%2F04%2F26%2Fedifying-the-young%2F&amp;linkname=Edifying%20The%20Young" title="LinkedIn" rel="nofollow noopener" target="_blank"></a><a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share#url=%2Findex.php%2F2017%2F04%2F26%2Fedifying-the-young%2F&amp;title=Edifying%20The%20Young" data-a2a-url="/index.php/2017/04/26/edifying-the-young/" data-a2a-title="Edifying The Young"></a></p><p>The post <a rel="nofollow" href="/index.php/2017/04/26/edifying-the-young/">Edifying The Young</a> appeared first on <a rel="nofollow" href="/">Geometric Algebra Explorer</a>.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Geometric Algebra in Computer Science</title>
		<link>/index.php/2017/01/17/ga-computer-science/</link>
		<pubDate>Tue, 17 Jan 2017 20:15:10 +0000</pubDate>
		<dc:creator><![CDATA[Ahmad Eid]]></dc:creator>
				<category><![CDATA[GA Applications]]></category>
		<category><![CDATA[GA Computing]]></category>
		<category><![CDATA[GA Software]]></category>
		<category><![CDATA[Interview]]></category>
		<category><![CDATA[Computer Graphics]]></category>
		<category><![CDATA[Computer Science]]></category>
		<category><![CDATA[Computer Vision]]></category>
		<category><![CDATA[Computing]]></category>
		<category><![CDATA[Geometric Algebra]]></category>
		<category><![CDATA[Neural Computing]]></category>
		<category><![CDATA[Robotics]]></category>
		<category><![CDATA[School]]></category>
		<category><![CDATA[Teaching]]></category>

		<guid isPermaLink="false">http://gacomputing.info/?p=2137</guid>
		<description><![CDATA[<p>One of the most important fields of application for Geometric algebra can be found in Computer Science. In this post, I interview 3 key researchers who apply Geometric Algebra in their work to share their valuable experience and insights. Their applied research spans many applications in computer science including Computer Graphics, Robotics, Computer Vision, Image Processing, Neural Computing, and more.</p>
<p>The post <a rel="nofollow" href="/index.php/2017/01/17/ga-computer-science/">Geometric Algebra in Computer Science</a> appeared first on <a rel="nofollow" href="/">Geometric Algebra Explorer</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p><a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=%2Findex.php%2F2017%2F01%2F17%2Fga-computer-science%2F&amp;linkname=Geometric%20Algebra%20in%20Computer%20Science" title="Facebook" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=%2Findex.php%2F2017%2F01%2F17%2Fga-computer-science%2F&amp;linkname=Geometric%20Algebra%20in%20Computer%20Science" title="Twitter" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=%2Findex.php%2F2017%2F01%2F17%2Fga-computer-science%2F&amp;linkname=Geometric%20Algebra%20in%20Computer%20Science" title="Google+" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=%2Findex.php%2F2017%2F01%2F17%2Fga-computer-science%2F&amp;linkname=Geometric%20Algebra%20in%20Computer%20Science" title="LinkedIn" rel="nofollow noopener" target="_blank"></a><a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share#url=%2Findex.php%2F2017%2F01%2F17%2Fga-computer-science%2F&amp;title=Geometric%20Algebra%20in%20Computer%20Science" data-a2a-url="/index.php/2017/01/17/ga-computer-science/" data-a2a-title="Geometric Algebra in Computer Science"></a></p><div class="pf-content"><p>&nbsp;</p>
<p><a href="/wp-content/uploads/2017/01/Computer-Science.jpg"><img class="aligncenter size-large wp-image-2354" src="/wp-content/uploads/2017/01/Computer-Science-1024x724.jpg" alt="Computer Science" width="1024" height="724" srcset="/wp-content/uploads/2017/01/Computer-Science-1024x724.jpg 1024w, /wp-content/uploads/2017/01/Computer-Science-300x212.jpg 300w, /wp-content/uploads/2017/01/Computer-Science-768x543.jpg 768w, /wp-content/uploads/2017/01/Computer-Science.jpg 1280w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></p>
<blockquote>[Computer science] is not really about computers and it&#8217;s not about computers in the same sense that physics is not really about particle accelerators, and biology is not about microscopes and Petri dishes&#8230; and geometry isn&#8217;t really about using surveying instruments. &#8212; Hal Abelson</p></blockquote>
<span class="dropcap">O</span>ne of the most important fields of application for Geometric algebra can be found in Computer Science. In this post, I interview 3 key researchers who apply Geometric Algebra in their work to share their valuable experience and insights. Their applied research spans many applications in computer science including Computer Graphics, Robotics, Computer Vision, Image Processing, Neural Computing, and more.</p>
<p>&nbsp;</p>
<h3><strong>Dr. Leo Dorst</strong></h3>
<p><span style="color: #003366;"><strong><a href="/wp-content/uploads/2017/01/Dr.-Leo-Dorst.jpg"><img class="alignright size-full wp-image-2355" src="/wp-content/uploads/2017/01/Dr.-Leo-Dorst.jpg" alt="Dr. Leo Dorst" width="200" height="200" srcset="/wp-content/uploads/2017/01/Dr.-Leo-Dorst.jpg 200w, /wp-content/uploads/2017/01/Dr.-Leo-Dorst-150x150.jpg 150w, /wp-content/uploads/2017/01/Dr.-Leo-Dorst-160x160.jpg 160w, /wp-content/uploads/2017/01/Dr.-Leo-Dorst-320x320.jpg 320w" sizes="(max-width: 200px) 100vw, 200px" /></a>Tell us about your primary research and teaching interests. What sort of satisfaction do you get when working on your primary interests?</strong></span></p>
<p>My primary interest is the interplay between geometry and its algebraic representation. It is great fun to derive some equation solving a problem, and then hearing it begin to talk to you about aspects you had never considered in the original formulation. This works most strongly in GA, which is why I love that framework. However, it is hard to find funding for this in abstracto. I am currently tying it into a project on restoring broken archaeological artifacts based on 3D scans (project-gravitate.eu); in a theoretical work package, this pulls in my earlier work on geometric path planning and mathematical morphology and offers an opportunity to study finite elements methods from a GA point of view.</p>
<p>&nbsp;</p>
<p><strong><span style="color: #003366;">What do you think are the main characteristics of GA as a mathematical modeling language?</span></strong></p>
<p>GA clears your mind and your software, even when you decide to stick to LA in practice (at least, in the beginning). The disgusting number of different terms and techniques in LA which are all, in hindsight, ways to avoid using the outer product are a good example. Once you realize that outer product exists, much of the operations described in natural language (like &#8216;span&#8217;) coherently collapse to elementary and compact algebraic operations under your own control. Certainly, in computer science where 3D is just not enough (the spaces involved in machine learning are very high-dimensional), the outer product MUST be taught. And once you have the outer product, you might as well absorb the geometric product for generalized projections and rejections. As for operators, use rotors instead of quaternions, so you have something that is real and that generalizes to n-D.</p>
<p>&nbsp;</p>
<p><span style="color: #003366;"><strong>Tell us about your important book, coauthored with S. Mann and D. Fontijne, &#8220;Geometric Algebra for Computer Science&#8221; (GA4CS). How can the GA community make more books like it to help attract more people to learn and apply GA in their research and teaching?</strong></span></p>
<p>After I just learned GA, I was amazed by the clarity it provides at the computational basis for geometry, and its new elements and operators at an intermediate level of abstraction: it is great to have the very interesting new primitives, especially in CGA (conformal geometric algebra). What can we do more or better once we learn to think in terms of those primitives? I knew I could not develop the consequences for intermediate and high-level algorithms myself &#8212; there is just too much reform to do, in too many fields. So we wrote a book to convey the basic tools and the algebraically supported intuition of their interplay, for others to do that work, each in their own subfield. It has not quite taken off yet in the way I hoped, though there are some examples (such as work by Ishida at Honda on genetic algorithms for road-following using GA primitives and their interactions as the chromosomes and cross-over operations). We need more work at that intermediate level, showing how or when the possibility not to go down to the vector level pays off.</p>
<p>&nbsp;</p>
<p><span style="color: #003366;"><strong>If you were to write a second book on GA mathematics and applications after 10 years of GA4CS, what new GA topics would you include? What new applications?</strong></span></p>
<p>At some point it would be good to collate some convincing applications of the new thinking, directly employing the intermediate primitives (like the Honda example above, or the application to GIS). Our 2011 &#8216;Guide to GA in Practice&#8217; contains some good chapters in those directions, but a proper book would need more tight editorial coherence. I would like to see parts on projective geometric algebra since that is so important to graphics (I believe R(3,3) is the right model, but we still need to learn to encode the world in its primitives, the line complexes), and on finite element methods done in GA (with special emphasis on 3D meshes).</p>
<p>&nbsp;</p>
<h3>Dr. Dietmar Hildenbrand</h3>
<p><span style="color: #003366;"><strong><a href="/wp-content/uploads/2017/01/Dr.-Dietmar-Hildenbrand.jpg"><img class="alignright size-medium wp-image-2356" src="/wp-content/uploads/2017/01/Dr.-Dietmar-Hildenbrand-297x300.jpg" alt="Dr. Dietmar Hildenbrand" width="297" height="300" srcset="/wp-content/uploads/2017/01/Dr.-Dietmar-Hildenbrand-297x300.jpg 297w, /wp-content/uploads/2017/01/Dr.-Dietmar-Hildenbrand.jpg 564w" sizes="(max-width: 297px) 100vw, 297px" /></a>What reasons made you want to do research related to Geometric Algebra? Tell us about the difficulties you faced </strong><strong>and the satisfactions you felt during your journey with GA until now.</strong></span></p>
<p>When I started to work with GA in 2003, I was immediately very impressed how easy it is to develop 3D algorithms dealing with geometric objects and operations based on GA. I was very happy to use a tool providing me an immediate visual result for mathematical expressions: CLUCalc from Christian Perwass. I am still developing most of my GA algorithms with CLUCalc and, in my opinion, CLUCalc is still today the best tool in order to learn how to use Geometric Algebra for 3D applications.</p>
<p>In 2004, when I organized and presented a GA tutorial at the Eurographics conference in Grenoble together with Christian Perwass, Daniel Fontijne, and Leo Dorst, the feedback was positive and negative at the same time.<br />
On one hand, many people were happy about the expressiveness of GA, but on the other hand, it was clear for everybody that implementations of computer graphics applications were not competitive in terms of runtime performance.</p>
<p>I realized that improving the runtime performance of GA will be the key to convincing engineers to use GA in their applications. At that time, nobody really expected that it could be possible for implementations of GA algorithms to be faster than the conventional implementation. But, in 2006, we were happy to present even two different implementations proving exactly that for a computer animation application (the movement of the arm of a virtual character).</p>
<p>&nbsp;</p>
<p><span style="color: #003366;"><strong>Tell us about Geometric Algebra Computing (GAC). What were your initial expectations when you started working </strong></span><span style="color: #003366;"><strong>on that topic? What is its current state? How do you see the future of GAC and its applications in computer science </strong></span><span style="color: #003366;"><strong>and engineering?</strong></span></p>
<p>Our approach for the just mentioned proof-of-concept application was very specific. This is why our next goal was a general system making it possible for almost every engineer to include GA in his/her application. And, the description of GA algorithms should be as much as possible similar to how CLUCalc ist doing that.</p>
<p>Now, we are happy to provide the Gaalop (Geometric Algebra Algorithms Optimizer) precompiler for the integration of GA into standard programming languages such as C++, OpenCL, CUDA and C++ AMP.</p>
<p>The integration is done based on GaalopScript, which is very much inspired by the CLUCalc scripting language. This technology is described in my book &#8220;Foundations of Geometric Algebra Computing&#8221; from 2013. Since 2015 this technology is part of the ecosystem of the HSA Foundation of more than 40 companies dealing with new heterogeneous computing architectures. Now, we have this technology available, as well as some other GA tools such as GMac, Gaigen, Gaalet and Versor, but the community working with it is still very small. The future of GAC and its applications in computer science and engineering relies heavily on whether we will succeed in closing this gap.</p>
<p>&nbsp;</p>
<p><span style="color: #003366;"><strong>What steps do you think should the GA community take to gain wider spread of GA among the larger community of engineers and computer scientists?</strong></span></p>
<p>Today, we indeed have this GAC technology available for easy to develop, geometrically intuitive, robust and fast engineering applications, but there is still only a small number of people knowing it. Exactly at this point, the book &#8220;Introduction to Geometric Algebra Computing&#8221;, that I am just writing, comes into place. The main goal of this book is to close the gap with an introduction of GA from an engineering/computing perspective. The intended audiences are students, engineers, and researchers interested in learning GAC. This book is intended to give a rapid introduction to the computing with Geometric Algebra and its power for geometric modeling. From the geometric objects point of view, it focuses on the most basic ones, namely points, lines, and circles. We call this algebra Compass Ruler Algebra since you are able to handle it comparable to working with compass and ruler. It offers the possibility to compute with these geometric objects and their geometric operations and transformations in a very intuitive way. While focusing on 2D it is easily expandable to 3D computations as used in many books dealing with the very popular Conformal Geometric Algebra in engineering applications such as computer graphics, computer vision, and robotics. This book follows a top-down approach. Focusing first on how to use GA, it is up to the reader how much he/she would like to go into the details.</p>
<p>Another attempt to gain wider spread is the ENGAGE (Empowering Novel Geometric Algebra for Graphics &amp; Engineering) workshop as part of the CGI (Computer Graphics International) conference. This year, this will be in Japan (<a href="http://fj.ics.keio.ac.jp/cgi17/" target="_blank" rel="noopener">http://fj.ics.keio.ac.jp/cgi17/</a>). But, sure, there is still the need of many good ideas in order to attract more and more engineers.</p>
<p>&nbsp;</p>
<p><span style="color: #003366;"><strong>I know you are interested in teaching GA in schools. From your point of view, what steps are required in the near future to reach a wide acceptance of this idea? What are the difficulties you see facing its achievement?</strong></span></p>
<p>Yes, you are right, I already have some experience with GA at schools. Because of its geometric intuitiveness, it is very easy for children to develop algorithms in GA. In some workshops, I could see that children are happy to solve simple robotics problems which they normally are not able to before university. A colleague of mine already taught special relativity based on GA at school. But the main problem is to make GA really part of the curriculum. Maybe some teachers/responsibles for curricula will use my above mentioned new book for teaching themselves and for introducing it already in school.</p>
<p>&nbsp;</p>
<h3><strong>Dr. Eckhard Hitzer</strong></h3>
<p><span style="color: #003366;"><strong><a href="/wp-content/uploads/2017/01/Dr.-Eckhard-Hitzer.jpg"><img class="alignright size-full wp-image-2357" src="/wp-content/uploads/2017/01/Dr.-Eckhard-Hitzer.jpg" alt="Dr. Eckhard Hitzer" width="200" height="160" /></a>During the previous years, you&#8217;ve been following the developments in applied GA through your GA Updates blog. How do you see the current state of GA research? In what application areas do you expect the next developments will probably be?</strong></span></p>
<p>Geometric Algebra research is not only revolutionizing algorithm development in many fields (robotics, visualization, mapping, virtual reality, GIS, molecular dynamics, telecommunication, offshore mechatronics, 3D cadastres, navigation, &#8230;), it also begins to exhibit superior accuracy, stability, and speed, and is increasingly introduced in mainstream computing ecosystems.</p>
<p>&nbsp;</p>
<p><span style="color: #003366;"><strong>What types of problems, from your experience, can be handled with GA more effectively relative to classical techniques in neural computing and signal processing? What kinds of ideas can be investigated in these two areas using GA&#8217;s powerful mathematics?</strong></span></p>
<p>In neural computing and signal processing Geometric Algebra allows to generalize 1D and 2D algorithms seamlessly to higher dimensions with great advantages for electromagnetic signals, including light and color, and it fully captures, analyzes and reproduces complex high dimensional geometric relationships and topology. It begins to be used for technologies needed for autonomous driving, color face recognition, land mine detection, speech recognition, new forms of tomography, &#8230;</p>
<p>&nbsp;</p>
<p><span style="color: #003366;"><strong>If you are talking to a new post-graduate student and trying to explain the benefits of using GA in his future research activities, what would you tell him about GA? What pitfalls would you warn him not to get into? What expectations should he have related to the future of GA research?</strong></span></p>
<p>Be ready to unlearn often inefficient, inaccurate, unintuitive matrix methods and systems of linear equations. Instead learn to think and work directly in terms of geometric entities, their relations, transformations, and interactions, all efficiently and invariantly expressed directly by geometric algebra entities and their products. Resist the initial temptation to fall back into coordinate system component techniques, which hide geometric realities behind veils of stupendous numerical arrays. Expect to liberate your geometric intuition, and be able to work with an advanced single universal integrative mathematical system for whatever problem or task you may face in the future.</p>
<p>&nbsp;</p>
<p><span style="color: #003366;"><strong>How can the GA community gain more supporters and members in the near future? What kinds of events, funding proposals, online activities, etc. should the GA community focus on to attain this goal?</strong></span></p>
<p>Organizing sessions and workshops at major science and engineering conferences is a good way. International collaborative projects might be another. Submitting research papers to all types of science and engineering journals, when the applications topic permits that, rather than highly specialized journals. Preprints published ASAP on servers like vixra.org, preprint.org, etc. and open access, will also help. In addition, sharing lectures and software demos on YouTube will help interested students, professionals, and engineers to know about geometric algebra even outside formal educational and academic workshop settings.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
</div><p><a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=%2Findex.php%2F2017%2F01%2F17%2Fga-computer-science%2F&amp;linkname=Geometric%20Algebra%20in%20Computer%20Science" title="Facebook" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=%2Findex.php%2F2017%2F01%2F17%2Fga-computer-science%2F&amp;linkname=Geometric%20Algebra%20in%20Computer%20Science" title="Twitter" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=%2Findex.php%2F2017%2F01%2F17%2Fga-computer-science%2F&amp;linkname=Geometric%20Algebra%20in%20Computer%20Science" title="Google+" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=%2Findex.php%2F2017%2F01%2F17%2Fga-computer-science%2F&amp;linkname=Geometric%20Algebra%20in%20Computer%20Science" title="LinkedIn" rel="nofollow noopener" target="_blank"></a><a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share#url=%2Findex.php%2F2017%2F01%2F17%2Fga-computer-science%2F&amp;title=Geometric%20Algebra%20in%20Computer%20Science" data-a2a-url="/index.php/2017/01/17/ga-computer-science/" data-a2a-title="Geometric Algebra in Computer Science"></a></p><p>The post <a rel="nofollow" href="/index.php/2017/01/17/ga-computer-science/">Geometric Algebra in Computer Science</a> appeared first on <a rel="nofollow" href="/">Geometric Algebra Explorer</a>.</p>
]]></content:encoded>
			</item>
		<item>
		<title>The Abstract</title>
		<link>/index.php/2015/07/03/the-abstract/</link>
		<pubDate>Fri, 03 Jul 2015 14:00:18 +0000</pubDate>
		<dc:creator><![CDATA[Ahmad Eid]]></dc:creator>
				<category><![CDATA[Geometric Algebra]]></category>
		<category><![CDATA[Abstraction]]></category>
		<category><![CDATA[Computing]]></category>
		<category><![CDATA[GA]]></category>
		<category><![CDATA[Teaching]]></category>

		<guid isPermaLink="false">http://gacomputing.info/?p=130</guid>
		<description><![CDATA[<p>I've been dealing with mathematical abstractions most of my life, as a student then as a software engineer and faculty member, on various levels and forms. My experience is like trying to find a safe path in a big forest of data and ideas that keep on growing and changing each day.</p>
<p>The post <a rel="nofollow" href="/index.php/2015/07/03/the-abstract/">The Abstract</a> appeared first on <a rel="nofollow" href="/">Geometric Algebra Explorer</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p><a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=%2Findex.php%2F2015%2F07%2F03%2Fthe-abstract%2F&amp;linkname=The%20Abstract" title="Facebook" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=%2Findex.php%2F2015%2F07%2F03%2Fthe-abstract%2F&amp;linkname=The%20Abstract" title="Twitter" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=%2Findex.php%2F2015%2F07%2F03%2Fthe-abstract%2F&amp;linkname=The%20Abstract" title="Google+" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=%2Findex.php%2F2015%2F07%2F03%2Fthe-abstract%2F&amp;linkname=The%20Abstract" title="LinkedIn" rel="nofollow noopener" target="_blank"></a><a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share#url=%2Findex.php%2F2015%2F07%2F03%2Fthe-abstract%2F&amp;title=The%20Abstract" data-a2a-url="/index.php/2015/07/03/the-abstract/" data-a2a-title="The Abstract"></a></p><div class="pf-content"><p><a href="/wp-content/uploads/2015/06/wordle-4.png"><img class="size-full wp-image-206 aligncenter" src="/wp-content/uploads/2015/06/wordle-4.png" alt="Abstraction Word Cloud" width="792" height="506" srcset="/wp-content/uploads/2015/06/wordle-4.png 792w, /wp-content/uploads/2015/06/wordle-4-300x192.png 300w, /wp-content/uploads/2015/06/wordle-4-768x491.png 768w" sizes="(max-width: 792px) 100vw, 792px" /></a></p>
<blockquote><p>If people do not believe that mathematics is simple, it is only because they do not realize how complicated life is &#8211; John von Neumann</p></blockquote>
<span class="dropcap">A</span>bstraction is a fundamental human skill and tool for understanding the universe. If you&#8217;re an artist expressing emotions and visual experiences, if you&#8217;re a mathematician investigating theorems and proofs, if you&#8217;re an engineer designing models and performing simulations, if you&#8217;re a software developer creating code for software systems, or if you&#8217;re an educator in need for transferring knowledge and motivating skills you must use abstraction to &#8220;create and communicate&#8221;. In one book about abstraction <sup class='endnote'><a href='#en-130-1' id='enref-130-1' onclick='return hhEndnotes_show(130)'>1</a></sup> the following definition is adopted:</p>
<blockquote><p>abstraction is deﬁned as &#8220;the process of extracting the underlying essence of a mathematical concept, removing any dependence on real world objects with which it might originally have been connected, and generalizing it so that it has wider applications.&#8221; A good illustrative example of this abstraction process is geometry, which started from the observation and measurement of physical spaces and forms, moving then to the abstract axioms of the Euclidean geometry, and, later on, to non-Euclidean geometries, farther and farther removed from the perceived physical world. An interesting aspect of abstraction is that an increase in the level of abstraction is paralleled by a deepening in the understanding of the connections among mathematical concepts. For instance, by abstracting the Non-Euclidean geometry to “the study of properties invariant under a given group of symmetries” has revealed deep connections between geometry and abstract algebra. Moreover, abstraction can suggest direction of knowledge transfer among different domains.</p></blockquote>
<div id="attachment_249" style="width: 310px" class="wp-caption alignright"><a href="/wp-content/uploads/2015/07/254-750x726.jpg"><img class="size-medium wp-image-249" src="/wp-content/uploads/2015/07/254-750x726-300x290.jpg" alt="The Forest of Abstractions" width="300" height="290" srcset="/wp-content/uploads/2015/07/254-750x726-300x290.jpg 300w, /wp-content/uploads/2015/07/254-750x726.jpg 750w" sizes="(max-width: 300px) 100vw, 300px" /></a><p class="wp-caption-text">The Forest of Abstractions</p></div>
<p>I&#8217;ve been dealing with mathematical abstractions most of my life, as a student then as a software engineer and faculty member, on various levels and forms. My experience is like trying to find a safe path in a big forest of data and ideas that keep on growing and changing each day. Abstractions are like trees in the big forest; some are very tall and hard to climb but if you could reach their top you uncover vast areas of ideas and directions and you may even gain some wisdom about life itself. Some other abstractions are so weak and short-lived they just keep you warm at night or perhaps you can make a rope to climb the other tall trees of abstraction the next morning. Some abstractions are elegant and beautiful but may bare little fruit for quite some time (practical applications). Some abstractions are ugly but many depend on them for their practical usefulness. It also may happen that strong useful trees of abstraction can hide taller and better ones from our &#8220;mental vision&#8221; and at some point we have to either jump from them or completely cut them down from our minds to get higher. Finding a safe path inside such forest is a blessing not all are granted. Worse yet you could find your safe path and walk it alone as no other sees its elegance, usefulness, and security except you. Then you would have to call for company by creating a website like this one.</p>
<p>Writing your first computer code at 11 and continuing to write more code for 25 or more years gives you many joys, disappointments, questions, ideas, and ultimately more knowledge. From an early stage you realize that mathematics is both a fuel and limit for your computing skills. The more efficient your mathematical abstractions are the more powerful ideas you have, the more you can realize in your code, and the more wisdom you gain. This intuition was emphasized in my engineering study and practice through the universal presence of mathematics in computer science books and articles more than any other engineering discipline. Searching for and using good mathematical abstractions is, in my opinion, an important task for anyone in my position.</p>
<h3>The Linear Engineer</h3>
<p>Up to high school one gets usually familiar with some useful but &#8220;apparently distinct&#8221; mathematical abstractions. Several number systems (typically natural, rational, real, and complex numbers) are introduced. Polynomial algebra on real numbers is studied. Euclidean geometry in 2D and 3D (usually started by trigonometry and some analytic geometry) is presented. And some calculus is used to link the physical world to the mathematical world <sup class='endnote'><a href='#en-130-2' id='enref-130-2' onclick='return hhEndnotes_show(130)'>2</a></sup>. Each of these abstractions are usually taught as sets of &#8220;mathematical recipes&#8221; that are barely related together by any common thread of thought. This method of teaching is very annoying, and ultimately limiting, to &#8220;deep thinkers&#8221; on both sides: teachers and students.</p>
<p>The first shock usually comes in the &#8220;higher education&#8221; at the university. One would expect that the sets of &#8220;mathematical recipes&#8221; would somehow merge into a set of smaller, more powerful and seamlessly integrating mathematical abstractions to suit the needs of engineers and scientists. Instead I found myself lost in a larger, more divided forest of &#8220;mathematical tools&#8221; rather than the well designed &#8220;garden of abstract knowledge&#8221; that I expected to enter in my engineering study. <span class="pullquote-right">Instead I found myself lost in a larger, more divided forest of &#8220;mathematical tools&#8221; rather than the well designed &#8220;garden of abstract knowledge&#8221; that I expected to enter in my engineering study.</span>
<p>During my first year <sup class='endnote'><a href='#en-130-3' id='enref-130-3' onclick='return hhEndnotes_show(130)'>3</a></sup> I found the first step to my path, a.k.a Abstract Linear Algebra <sup class='endnote'><a href='#en-130-4' id='enref-130-4' onclick='return hhEndnotes_show(130)'>4</a></sup>. I was blessed to be taught this course by Dr. Muhammad Yossuf <sup class='endnote'><a href='#en-130-5' id='enref-130-5' onclick='return hhEndnotes_show(130)'>5</a></sup> who had us view vectors and linear transforms as the elegant abstractions of Euclidean directions, positions, and motions, but with richer, deeper meanings and wider applicability by treating matrices as &#8220;convenient computational tools&#8221; rather than &#8220;mindless mathematical recipes&#8221;. This was my first time to climb a big abstraction tree and see the heavens and earth from higher grounds. The power of this concept of &#8220;linear abstraction&#8221; enabled me to view hidden links between seemingly diverse subjects of study in later years (like automatic control, differential equations, numerical analysis, and signal processing for example). Now I could invent new &#8220;mathematical recipes&#8221; and cook them into large amounts of computer code without losing insight into the basic idea behind the code. And once you find such path it&#8217;s impossible to go back.</p>
<p>It&#8217;s not strange that linear algebra is very important to engineers in all fields <sup class='endnote'><a href='#en-130-6' id='enref-130-6' onclick='return hhEndnotes_show(130)'>6</a></sup>. For example the following statement taken from one signal processing book <sup class='endnote'><a href='#en-130-7' id='enref-130-7' onclick='return hhEndnotes_show(130)'>7</a></sup> can be found in many engineering books in some form or another:</p>
<blockquote><p>Much information is available for both the analysis and design of LTI (linear time-invariant) systems. This is especially true for system design. In fact, in preliminary design stages for non-LTI physical systems, we often fit a LTI model to the physical system so as to have a starting point for the design. The LTI model may not be very accurate, but the use of an LTI model allows us to initiate the design process with standard design procedures.</p></blockquote>
<p>I discovered after graduation, as my second shock, that the universe is mostly non-linear, that there is noting that can be time-invariant because of the second law of thermodynamics, and that most systems are very sensitive to initial conditions to be predictable for indefinite periods of time (as clearly stated by chaos theory and widely experienced in practice). Nevertheless, a linear system is a good starting point to model and solve almost all problems in engineering; mostly because many engineers are afraid of the darkness of the mathematics of non-linear chaotic systems, a very dark part of the mathematical forest of abstractions.</p>
<h3>The Geometric Engineer</h3>
<p>In Arabic the word engineering is pronounced &#8220;Handasah&#8221; and is said to be of Persian origin meaning &#8220;the ability to solve problems&#8221;. The word geometry is also called &#8220;Handasah&#8221; in Arabic; definitely not a coincidence. Since the dawn of human civilization geometry and engineering were the same. It appears that the need for regulating water supply and creating landmark buildings in the ancient world along with the in-built ability of the human brain to reason in 3D space was the origin of all engineering. Engineers can never understand, model, create, or maintain any technology without using a geometry of some sort. The natural way of expressing and understanding geometry is to draw elegant diagrams that made us proud in our first years as engineering students while taking care of drawing each line and writing every dimension. <span class="pullquote-right">The natural way of expressing and understanding geometry is to draw elegant diagrams that made us proud in our first years as engineering students while taking care of drawing each line and writing every dimension.</span> Although lines and planes are common in many engineering designs, they are not the only objects; not even the most important ones. Spheres, cylinders, cones, and many more complex non-linear objects are known and have been used through history.</p>
<p>Throughout history the main efforts to further our understanding and use of geometry have always been through algebra. From the very old theory of Pythagoras, through the vast advancements of algebra, trigonometry, and geometry by Muslim mathematicians <sup class='endnote'><a href='#en-130-8' id='enref-130-8' onclick='return hhEndnotes_show(130)'>8</a></sup>, to the modern view of Cayley–Klein geometry <sup class='endnote'><a href='#en-130-9' id='enref-130-9' onclick='return hhEndnotes_show(130)'>9</a></sup>, the struggle was to find algebraic abstractions to express geometric ideas. Currently we have many such algebraic abstractions (too many in fact); the problem now is not to find such abstractions, but how to teach them to whom it may concern!</p>
<h3>The Computational Engineer</h3>
<p>To create software based on geometric abstractions it&#8217;s impossible to &#8220;directly&#8221; explain yourself to a computer through the human method of diagrams and verbal explanations. One must use algebra, expressed as data structures and algorithms, to &#8220;generate&#8221; the code that implements the intended geometric knowledge. Even software systems with graphical user interfaces (GUIs) like AutoCAD and 3ds Max use algebra-based data structures and algorithms internally. The GUI is just a layer for our human convenience not for any intrinsic need of the computer itself <sup class='endnote'><a href='#en-130-10' id='enref-130-10' onclick='return hhEndnotes_show(130)'>10</a></sup>. In our study as engineers the use of vector algebra and vector calculus is dominant. Any software library dealing with geometry must have matrices and vectors built into its core. My third &#8220;shock of abstraction&#8221; that happened after completing my M.Sc. was to find this use not motivated by the lack of better algebraic systems, but rather by a &#8220;series of unfortunate events!&#8221; <sup class='endnote'><a href='#en-130-11' id='enref-130-11' onclick='return hhEndnotes_show(130)'>11</a></sup>. <span class="pullquote-right">My third &#8220;shock of abstraction&#8221; that happened after completing my M.Sc. was to find this use not motivated by the lack of better algebraic systems, but rather by a &#8220;series of unfortunate events!&#8221;</span> In addition, not all problems that can be described mathematically can be computed. The set of problems that we can &#8220;theoretically&#8221; compute solutions for is closely linked to the existence of an algorithm to solve the problem. Even in that theoretical set of computable problems we need to find an algorithm that produces acceptable results in &#8220;reasonable&#8221; time, hardware, and input-size requirements (remember the big O notation). One other problem is to find a programming language that &#8220;suits&#8221; the algorithm we found. The code should be writable, readable, and in general beautiful code <sup class='endnote'><a href='#en-130-12' id='enref-130-12' onclick='return hhEndnotes_show(130)'>12</a></sup>. The first two problems are the hardest theoretically; the third is the hardest practically.</p>
<p>There are two main kinds of programming languages: the general and the specific. General purpose programming languages are dominant in creating geometric-algebraic solutions to our problems. Everybody knows C++, Java, C#, Python, or some other such language. But generality comes with many problems in readability, writablity, and elegance of written code. In addition creating code by a general purpose programming language usually separates the designer of the algorithm from the developer of the code. If the &#8220;geometric modeller&#8221; tries to write the code himself, as he should, using a general purpose language all kinds of problems often occur including memory leaks, bad performance, and having to learn the full details of a whole language just to create an efficient implementation of a required algorithm. Object oriented programming may solve some of these problems, but a good tool to implement computational software should contain a domain specific language (DSL)<sup class='endnote'><a href='#en-130-13' id='enref-130-13' onclick='return hhEndnotes_show(130)'>13</a></sup> that can be used directly by the &#8220;domain expert&#8221; to write code that can be translated automatically to machine code or to a general purpose language code as an intermediate stage of compilation.</p>
<h3>The Pedagogical Engineer</h3>
<p><a href="https://en.wikipedia.org/wiki/Pedagogy" target="_blank" rel="noopener">Pedagogy</a> is the discipline that deals with the theory and practice of education; it thus concerns the study and practice of how best to teach. A good teacher is always on the search for better ways to transfer knowledge and skills to students. The most important skill to be transferred to engineering students is the ability to self-educate. Dealing with new technology every day, especially in computer science, is impossible without such vital skill. But all engineering is based on mathematical abstractions; especially the algebraic, geometric, and computational abstractions. The nature of many mathematical abstractions used in teaching is, in my own experience as an engineering student and teacher, the most limiting for motivating and transferring the skill of self-education. The same conceptually intuitive geometric abstraction is expressed using too many algebraic tools. Let&#8217;s take the simple concept of &#8220;rotation&#8221; as an example. Rotation is so geometrically basic that we deal with it easily in childhood; as individual children and as early human collective knowledge. Then we are taught to express rotations in the plane using trigonometry, After some time we use orthogonal matrices for the same purpose in 2D and 3D. If we take a course in electrical circuits we discover that electrical engineers deal with constant frequency &#8220;rotating vectors&#8221; in the form of exponential functions. If we use some computer graphics library like DirectX we use something called a <a href="https://en.wikipedia.org/wiki/Quaternion" target="_blank" rel="noopener">quaternion</a> to perform rotation in 3D space. The simple concept of rotation is expressed using too many algebraic abstractions with no apparent connection and no easy way of deciding when to use each tool and how to convert the geometric data to suit that algebraic tool. The direct result of such problem is a limited number of geometrically competent engineers; a very frustrating outcome for many teachers and students alike. Another consequence is the need for many teaching hours per subject to establish a mathematical base of algebraic tools specific to that subject <sup class='endnote'><a href='#en-130-14' id='enref-130-14' onclick='return hhEndnotes_show(130)'>14</a></sup>. If there were a single abstract framework to be taught once for most subjects that would make more time for teaching the engineering concepts rather than the mathematical tools. The current state of affairs in engineering teaching is a lack of such a unifying framework; after all, abstraction is about unification through extraction of common patterns.</p>
<h3>Geometric Algebra Computing</h3>
<p>To summarize:</p>
<ul>
<li>We need to be linear engineers; to find linear approximations for non-linear systems and create models accordingly.</li>
<li>We need to be geometric engineers; to think geometrically about our models and express our ideas algebraically.</li>
<li>We need to be computational engineers; to develop algorithms and implement them, at least partially, using domain specific languages suitable for our needs.</li>
<li>We need to be pedagogical engineers; to find a unifying mathematical abstraction suitable for building engineering skills in ourselves and our students in the most efficient manner.</li>
</ul>
<p>The key point here is &#8220;algebraic abstraction&#8221;. We need to find some compact mathematical algebraic abstraction, superseding the common ones, that directly corresponds to our human geometric intuition. This abstraction should be general enough to express and generalize familiar abstractions (like complex numbers, quaternions, subspace operations, linear transformations, and more) using a unified framework of algebraic tools. Now we can think geometrically and directly express our algorithms using a uniform algebraic framework and interpret the results efficiently. Creating a simple DSL based on such abstraction would be much easier as a great step in unifying computational geometry. Teaching geometry using such algebraic and programmatic tools would be efficient, fulfilling, and much more productive to students and teachers.</p>
<p>The reason this website is mainly dedicated to <a href="https://en.wikipedia.org/wiki/Geometric_algebra">Geometric Algebra</a> is that it has the potential of being <strong><em>the</em></strong> algebraic abstraction system for geometric processing for this century, just as vector algebra was for the 20th century. My goal isn&#8217;t to add to the mathematics behind GA, that&#8217;s already been done quite sufficiently, but rather to illustrate, reformulate, explore, and implement solutions to common problems in engineering and computer science in the abstract language of GA. That step has already been taken in physics with remarkable success. It&#8217;s about time to do the same on a wide scale in engineering and computer science. The title of this site &#8220;Geometric Algebra Computing&#8221; may have several meanings associated with it. One such meaning is given by <strong>Dr. Dietmar Hildenbrand</strong> (<a href="http://www.gaalop.de/dhilden/">http://www.gaalop.de/dhilden/</a>) the author of the book &#8220;<a href="https://www.amazon.com/Foundations-Geometric-Algebra-Computing-Geometry/dp/3642317936/ref=sr_1_1?ie=UTF8&amp;qid=1431672092&amp;sr=8-1&amp;keywords=dietmar+hildenbrand/">Foundations of Geometric Algebra Computing</a>&#8221; and creator of &#8220;<a href="http://www.gaalop.de/">Geometric Algebra Algorithms Optimizer (Gaalop)</a>&#8221; software. In his book, he defines <em><strong>“Geometric Algebra Computing”</strong></em> as:</p>
<blockquote><p>The geometrically intuitive development of algorithms using geometric algebra with a focus on their efficient implementation.</p></blockquote>
<p>Personally, I think about Geometric Algebra as a way of <em><strong>symbolic geometric thinking</strong></em>, not just another algebraic system. Computers can only be programmed when we fully understand the abstractions and processes involved in the problem at hand. Computing with Geometric Algebra is fascinating because it&#8217;s a high-level language for geometry as we humans think and understand and, at the same time, a logical algebraic system suitable for being a universal base for creating computer code for geometric processing using current compiler technology. Most of my research efforts are dedicated to illustrating and realizing the full potential of GA in various scientific computing applications.</p>
<p>I hope this site is successful in illustrating the power of GA-based linear models and DSLs. I hope you find your own path in the great forest of mathematical abstractions enjoyable and maturing.</p>
<p><img class="alignright size-full wp-image-208" src="/wp-content/uploads/2015/06/done1.png" alt="تمت بحمد الله الجمعة 16 رمضان 1436هـ" width="300" height="40" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<hr />
<p>&nbsp;</p>
<div class='endnotes' id='hhendnotes-130'>
<ol>
<li id='en-130-1'>Saitta, L. &#8220;Abstraction in Artificial Intelligence and Complex Systems&#8221;. Springer, 2013 <span class='endnotereverse'><a href='#enref-130-1'>&#8617;</a></span></li>
<li id='en-130-2'>Earl William Swokowski, &#8220;Calculus with Analytic Geometry: Alternate Edition&#8221;. Brooks/Cole, 1983 <span class='endnotereverse'><a href='#enref-130-2'>&#8617;</a></span></li>
<li id='en-130-3'>Our study begins with a general preparatory year followed by 4 years of specialized engineering study. So my first year was actually my second. <span class='endnotereverse'><a href='#enref-130-3'>&#8617;</a></span></li>
<li id='en-130-4'>Axler, S. J. &#8220;Linear Algebra Done Right, 3rd Edition&#8221;. Springer, 2014 <span class='endnotereverse'><a href='#enref-130-4'>&#8617;</a></span></li>
<li id='en-130-5'>In that same year I got a copy the hand written lecture notes of another Abstract Algebra introductory course Dr. Muhammad Yossuf taught in earlier years. Though he didn&#8217;t give me the abstract algebra course himself, the lecture notes were enough to deliver his &#8220;messages of abstraction&#8221; elegantly; I&#8217;m deeply grateful for both courses <span class='endnotereverse'><a href='#enref-130-5'>&#8617;</a></span></li>
<li id='en-130-6'>Engineers rely on linearity to such extent that reminds me with the joke about the man who lost his money in a dark place but went to look for it in a far well-lit place because he simply can&#8217;t see in the dark <span class='endnotereverse'><a href='#enref-130-6'>&#8617;</a></span></li>
<li id='en-130-7'>Charles L. Phillips, John Parr, Eve Riskin, &#8220;Signals, Systems, and Transforms, 4th Edition&#8221;. Prentice Hall 2007 <span class='endnotereverse'><a href='#enref-130-7'>&#8617;</a></span></li>
<li id='en-130-8'>See J.L. Berggren, &#8220;Episodes in the Mathematics of Medieval Islam&#8221;. Springer 2003; and Jim Al-Khalili, &#8220;The House of Wisdom: How Arabic Science Saved Ancient Knowledge and Gave Us the Renaissance&#8221;. Penguin Books, 2012 <span class='endnotereverse'><a href='#enref-130-8'>&#8617;</a></span></li>
<li id='en-130-9'>Isaak Moiseevich Yaglom, &#8220;Geometries, Groups and Algebras in the Nineteenth Century &#8211; A History&#8221;. Ishi Press 2009 <span class='endnotereverse'><a href='#enref-130-9'>&#8617;</a></span></li>
<li id='en-130-10'>Actually, all such systems have some kind of scripting language or API to be used for modeling activities, and is preferred in many situations over GUI modeling <span class='endnotereverse'><a href='#enref-130-10'>&#8617;</a></span></li>
<li id='en-130-11'>The details of which is the subject of my second blog post <span class='endnotereverse'><a href='#enref-130-11'>&#8617;</a></span></li>
<li id='en-130-12'>Andy Oram, Greg Wilson (Editors), &#8220;Beautiful Code: Leading Programmers Explain How They Think&#8221;. O&#8217;Reilly Media, 2007 <span class='endnotereverse'><a href='#enref-130-12'>&#8617;</a></span></li>
<li id='en-130-13'>Martin Fowler, &#8220;Domain-Specific Languages&#8221;. Addison-Wesley Professional, 2010 <span class='endnotereverse'><a href='#enref-130-13'>&#8617;</a></span></li>
<li id='en-130-14'>The mathematical tools needed for signal processing and electrical circuits are different from computer graphics and robotics, for example <span class='endnotereverse'><a href='#enref-130-14'>&#8617;</a></span></li>
</ol>
</div>
</div><p><a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=%2Findex.php%2F2015%2F07%2F03%2Fthe-abstract%2F&amp;linkname=The%20Abstract" title="Facebook" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=%2Findex.php%2F2015%2F07%2F03%2Fthe-abstract%2F&amp;linkname=The%20Abstract" title="Twitter" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=%2Findex.php%2F2015%2F07%2F03%2Fthe-abstract%2F&amp;linkname=The%20Abstract" title="Google+" rel="nofollow noopener" target="_blank"></a><a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=%2Findex.php%2F2015%2F07%2F03%2Fthe-abstract%2F&amp;linkname=The%20Abstract" title="LinkedIn" rel="nofollow noopener" target="_blank"></a><a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share#url=%2Findex.php%2F2015%2F07%2F03%2Fthe-abstract%2F&amp;title=The%20Abstract" data-a2a-url="/index.php/2015/07/03/the-abstract/" data-a2a-title="The Abstract"></a></p><p>The post <a rel="nofollow" href="/index.php/2015/07/03/the-abstract/">The Abstract</a> appeared first on <a rel="nofollow" href="/">Geometric Algebra Explorer</a>.</p>
]]></content:encoded>
			</item>
	</channel>
</rss>
